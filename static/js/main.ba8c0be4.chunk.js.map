{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["stripePromise","loadStripe","membersTaken","totalMembers","validMembers","App","checkoutClick","event","a","stripe","fetch","method","response","console","log","json","session","redirectToCheckout","sessionId","id","result","error","message","useState","count","setValue","className","symbol","interval","hide_top_toolbar","width","height","style","background","border","type","name","value","onChange","e","target","role","onClick","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba8c0be4.chunk.js","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\"\nimport './App.css';\nimport './scss/custom.scss'\nimport TradingViewWidget from 'react-tradingview-widget';\n\nconst stripePromise = loadStripe('pk_test_51IDpHFIRiN8NewytzC0856E85t72Bd2zF2Kn7sWSRgrZS8HlcQmCQNdEbXDqLrFIXuPJIf5arF9ojL7V5l32hpvL00UaiQd0BI')\nlet memberCount = 777;\n\nfunction membersTaken(totalMembers, validMembers) {\n  if (validMembers>totalMembers) {\n    return totalMembers;\n  }\n  else if (validMembers<0) {\n    return 0;\n  }\n  else {\n    return validMembers/totalMembers * 100;\n  }\n}\n\nfunction App() {\n  const checkoutClick = async (event) => {\n    // Get Stripe.js instance\n    const stripe = await stripePromise;\n\n    // Call your backend to create the Checkout Session\n    const response = await fetch('https://alertigo-api.herokuapp.com/create-checkout-session', { method: 'POST' });\n    console.log(response);\n    const session = await response.json();\n\n    // When the customer clicks on the button, redirect them to Checkout.\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id,\n    });\n\n    if (result.error) {\n      // If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `result.error.message`.\n      console.log(result.error.message);\n    }\n  }\n\n  const [count, setValue] = useState(memberCount);\n\n  return (\n    <div className='container-fluid p-0'>\n      {/* NAVBAR */}\n      <nav className='shadow rounded bg-primary text-center m-5 p-3'>\n        <p className='display-3 text-light text-uppercase'> Alertigo</p>\n        <p className='text-light'>Trading education  made simple</p>\n      </nav>\n      {/* WHAT IS TRADING */}\n      <div className='container'>\n        <p className='text-uppercase display-4 bg-primary shadow-lg text-center p-3 rounded text-light ml-auto mr-auto mb-5 mt-5 col-12 col-sm-10 col-md-8 col-lg-6'>What is Trading?</p>\n        <div className='row justify-content-center text-center'>\n          <div className='col-12 col-lg-4'>\n            <h3 className='bg-secondary text-light rounded shadow p-4 mb-5'>What is Crypto?</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a lectus turpis. Sed ipsum lorem, commodo vel egestas et, aliquam at metus. Nam ut bibendum odio, nec efficitur sapien. Aenean finibus pulvinar massa at volutpat. Integer tempus lacus at sapien congue lobortis. Nullam feugiat, sapien ac molestie convallis, nisi est cursus mi, ac imperdiet felis leo at velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam sodales quis massa eu aliquet. Morbi at nulla quis lacus congue dictum. Duis in tincidunt neque, id porta tortor. Proin et dignissim turpis, eget fringilla orci. Aenean mauris elit, rutrum non tortor eget, rutrum condimentum magna.</p>\n            <TradingViewWidget symbol=\"BTCUSD\" interval='45' hide_top_toolbar='true' width='100%' height='10em'/>\n          </div>\n          <div className='col-12 col-lg-4'>\n            <h3 className='bg-secondary text-light rounded shadow p-4 mb-5'>What are Stocks?</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pellentesque, dui ac convallis consequat, ipsum lacus varius nisl, at tincidunt lorem velit vel elit. Vivamus neque dolor, dapibus ac iaculis vel, dapibus et risus. Etiam maximus dolor quis dignissim tristique. Fusce felis enim, dapibus at orci eget, gravida hendrerit dolor. Nam sit amet sagittis augue, at scelerisque sem. Cras rhoncus leo in eros viverra mollis in quis est. Donec id dapibus turpis, ut bibendum quam. Nunc finibus risus a tortor ornare vestibulum. Sed auctor tellus eget elementum pulvinar. Duis aliquet ante vel pulvinar pellentesque. Etiam venenatis tellus maximus consectetur dignissim.</p>\n            <TradingViewWidget symbol=\"TSLA\" interval='45' hide_top_toolbar='true' width='100%' height='10em'/>\n          </div>\n          <div className='col-12 col-lg-4'>\n            <h3 className='bg-secondary text-light rounded shadow p-4 mb-5'>What is Forex?</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent justo felis, euismod quis nulla ut, varius rhoncus elit. Praesent augue tortor, ornare eget dapibus sit amet, sagittis a ligula. Integer facilisis, quam vel tempus tempor, nibh nisl euismod sapien, eget placerat magna eros in orci. Vestibulum velit erat, dictum sed cursus imperdiet, rutrum ac risus. Mauris purus lorem, vehicula at libero eu, vulputate faucibus dolor. Pellentesque quis lacus pretium, consequat arcu id, aliquet nisl. Praesent quis pharetra elit, eget bibendum odio. Morbi non ligula non turpis congue blandit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras eleifend quam justo, ac posuere tellus dictum a.</p>\n            <TradingViewWidget symbol=\"EURUSD\" interval='45' hide_top_toolbar='true' width='100%' height='10em' />\n          </div>\n        </div>\n      </div>\n      {/* COUNTER */}\n      <div className='row justify-content-center align-items-center text-center mt-5'>\n        <span className='h3 col-12 col-lg-auto'>Join Alertigo's community of </span>\n        <div className='shadow-lg bg-primary row m-3 display-3 rounded-circle' style={{width: '2em', height: '2em'}}>\n          <span className='m-auto h1'>\n            <input className='text-light text-center' style={{width: '3em', background: 'none', border: 'none'}} type='text' name='title' value={count} onChange={(e) => setValue(e.target.value)} />\n          </span>\n        </div>\n        <span className='h3 col-12 col-lg-auto'>passionate members today!</span>\n      </div>\n      {/* SIGN UP SECTION */}\n      <div className='container text-center'>\n        <p className='text-uppercase display-4 bg-primary shadow-lg text-center p-3 rounded text-light ml-auto mr-auto mb-5 mt-5 col-12 col-sm-10 col-md-8 col-lg-6'>Join Today!</p>\n        <div className=\"progress m-3\">\n          <div className=\"progress-bar\" role=\"progressbar\" style={{width: membersTaken(100, count) + '%'}}>100 Members pay $50/Month</div>\n        </div>\n        <div className=\"progress m-3\">\n          <div className=\"progress-bar\" role=\"progressbar\" style={{width: membersTaken(400, count-100) + '%'}}>400 Members pay $100/Month</div>\n        </div>\n        <div className=\"progress m-3\">\n          <div className=\"progress-bar\" role=\"progressbar\" style={{width: membersTaken(1000, count-500) + '%'}}>1000 Members pay $150/Month</div>\n        </div>\n        <div className=\"progress m-3\">\n          <div className=\"progress-bar\" role=\"progressbar\" style={{width: membersTaken(1500, count-1500) + '%'}}>1500 Members pay $200/Month</div>\n        </div>\n        <button className='btn btn-primary shadow mt-5 mb-5 p-4' type=\"button\" role=\"link\" onClick={checkoutClick}>\n          <h1 className='mb-0 text-uppercase'>Subscribe to Alertigo</h1>\n        </button>\n      </div>\n      <div className='container shadow bg-primary rounded p-3 mb-5 mt-3 text-center'>\n        <p className='text-light display-4 text-uppercase'>Contact Us</p>\n            <a href='http://twitter.com/alertigo'>Twitter</a><br/>\n            <a href='http://facebook.com/alertigo'>Facebook</a>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}