{"version":3,"sources":["components/alerts-list.component.js","components/team-bio.component.js","components/trading-info.component.js","App.js","reportWebVitals.js","index.js"],"names":["formatTime","time","hours","parseInt","substring","ampm","Alert","props","Col","xs","md","lg","xl","Card","className","Accordion","Toggle","as","Button","variant","eventKey","num","alert","ticker","date","Collapse","Body","stance","entry","exit","synopsis","AlertsList","state","alerts","axios","get","then","response","setState","data","catch","error","console","log","val","this","reverse","map","currentAlert","i","Container","alertList","Component","TeamBio","Row","Jumbotron","fluid","CardDeck","bg","Header","Text","TradingInfo","stripePromise","loadStripe","signUpText","members","dollars","tier","prevTier","App","useState","count","setCount","isLoading","setLoading","checkoutClick","event","a","stripe","post","session","redirectToCheckout","sessionId","id","result","message","useEffect","Navbar","expand","sticky","Brand","aria-controls","Nav","Link","href","Form","inline","FormControl","type","placeholder","value","onChange","e","target","size","disabled","onClick","ProgressBar","min","max","now","label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75feb046.chunk.js","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, {Component} from 'react';\nimport '../scss/custom.scss'\n\nimport axios from 'axios';\n\n//react bootstrap imports\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n// import Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\n\nconst formatTime = (time) => {\n    let hours = parseInt(time.substring(0,2));\n    let mins = time.substring(2,4);\n    let ampm = 'AM'\n    if (hours>12) {hours-=12; ampm='PM'}\n    \n    return hours + ':' + mins + ' ' + ampm;\n}\n\nconst Alert = props => (\n    <Col xs={12} md={6} lg={4} xl={3}>\n        <Card className=' bg-secondary border-0 mt-4 p-4'>\n            {/* <Card.Header className='text-center border-0 bg-transparent'> */}\n            <Accordion.Toggle as={Button} variant='secondary' eventKey={props.num}>\n                <h1 className='text-dark'>{props.alert.ticker}</h1>\n                <h4>{props.alert.date}</h4>\n                <p className='mb-0'>{formatTime(props.alert.time)}</p>\n            </Accordion.Toggle>\n            {/* </Card.Header> */}\n            <Accordion.Collapse eventKey={props.num}>\n                <Card.Body className='p-0 mt-3 text-center'> \n                    <h4>{props.alert.stance ? 'BULLISH' : 'BEARISH'}</h4>\n                    <h6>ENTRY PRICE: {props.alert.entry}</h6>\n                    <h6>EXIT PRICE: {props.alert.exit}</h6>\n                    <p className='mb-0'>{props.alert.synopsis}</p>\n                </Card.Body>\n            </Accordion.Collapse>\n        </Card>\n    </Col>\n)\n\nexport default class AlertsList extends Component {\n    constructor(props){\n        super(props);\n        this.state={alerts: []};\n    }\n\n    componentDidMount() {\n        axios.get('https://alertigo-api.herokuapp.com/alerts')\n            .then(response => {\n                this.setState({alerts: response.data});\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }\n\n    alertList() {\n        let val=0    \n        return this.state.alerts.reverse().map((currentAlert, i) => {\n            val++;\n            return <Alert alert={currentAlert} num={val} key={i}></Alert>\n        })\n    }\n\n    render() {\n        return (\n            <Container className='mt-2'>\n                <Accordion className='row'>\n                    {this.alertList()}\n                </Accordion>\n            </Container>\n        )\n    }\n}","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, {Component} from 'react';\nimport '../scss/custom.scss'\n\n//react bootstrap imports\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Card from 'react-bootstrap/Card'\nimport CardDeck from 'react-bootstrap/CardDeck'\n\nexport default class TeamBio extends Component {\n    render() {\n        return (\n            <Container className='mt-2'>\n                <Row xs='auto' className='justify-content-center mt-5'>\n                    <Jumbotron fluid className='bg-secondary shadow-lg rounded mb-0 p-4'>\n                    <h1 className='text-center font-weight-light text-dark mb-0'>\n                    WHO IS ALERTIGO?\n                    </h1>\n                    </Jumbotron>\n                </Row>\n                <CardDeck className='mt-5 mb-5'>\n                    <Card bg='secondary' className='shadow-lg'>\n                        <Card.Header><h2 className='font-weight-light mb-0 text-center'>LEAPS TRADER</h2></Card.Header>\n                        <Card.Body>\n                        <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a lectus turpis. Sed ipsum lorem, commodo vel egestas et, aliquam at metus. Nam ut bibendum odio, nec efficitur sapien. Aenean finibus pulvinar massa at volutpat. Integer tempus lacus at sapien congue lobortis. Nullam feugiat, sapien ac molestie convallis, nisi est cursus mi, ac imperdiet felis leo at velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam sodales quis massa eu aliquet. Morbi at nulla quis lacus congue dictum. Duis in tincidunt neque, id porta tortor. Proin et dignissim turpis, eget fringilla orci. Aenean mauris elit, rutrum non tortor eget, rutrum condimentum magna.</Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <div className='w-100 d-md-none mt-2 mb-2'></div>\n                    <Card bg='secondary' className='shadow-lg'>\n                        <Card.Header><h2 className='font-weight-light mb-0 text-center'>CHRIS GARCIA</h2></Card.Header>\n                        <Card.Body>\n                        <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pellentesque, dui ac convallis consequat, ipsum lacus varius nisl, at tincidunt lorem velit vel elit. Vivamus neque dolor, dapibus ac iaculis vel, dapibus et risus. Etiam maximus dolor quis dignissim tristique. Fusce felis enim, dapibus at orci eget, gravida hendrerit dolor. Nam sit amet sagittis augue, at scelerisque sem. Cras rhoncus leo in eros viverra mollis in quis est. Donec id dapibus turpis, ut bibendum quam. Nunc finibus risus a tortor ornare vestibulum. Sed auctor tellus eget elementum pulvinar. Duis aliquet ante vel pulvinar pellentesque. Etiam venenatis tellus maximus consectetur dignissim.</Card.Text>\n                        </Card.Body>\n                    </Card>\n                </CardDeck>\n            </Container>\n        )\n    }\n}","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, {Component} from 'react';\nimport '../scss/custom.scss'\n\n//react bootstrap imports\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Card from 'react-bootstrap/Card'\nimport CardDeck from 'react-bootstrap/CardDeck'\n\nexport default class TradingInfo extends Component {\n    render() {\n        return (\n            <Container className='mt-2'>\n                <Row xs='auto' className='justify-content-center mt-5'>\n                    <Jumbotron fluid className='bg-secondary shadow-lg rounded mb-0 p-4'>\n                        <h1 className='text-center font-weight-light text-dark mb-0'>\n                        WHAT IS TRADING?\n                        </h1>\n                    </Jumbotron>\n                </Row>\n                <CardDeck className='mt-5 mb-5'>\n                    <Card bg='secondary' className='shadow-lg'>\n                        <Card.Header><h2 className='font-weight-light mb-0 text-center'>WHAT IS CRYPTO?</h2></Card.Header>\n                        <Card.Body>\n                        <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a lectus turpis. Sed ipsum lorem, commodo vel egestas et, aliquam at metus. Nam ut bibendum odio, nec efficitur sapien. Aenean finibus pulvinar massa at volutpat. Integer tempus lacus at sapien congue lobortis. Nullam feugiat, sapien ac molestie convallis, nisi est cursus mi, ac imperdiet felis leo at velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam sodales quis massa eu aliquet. Morbi at nulla quis lacus congue dictum. Duis in tincidunt neque, id porta tortor. Proin et dignissim turpis, eget fringilla orci. Aenean mauris elit, rutrum non tortor eget, rutrum condimentum magna.</Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <div className='w-100 d-lg-none mt-2 mb-2'></div>\n                    <Card bg='secondary' className='shadow-lg'>\n                        <Card.Header><h2 className='font-weight-light mb-0 text-center'>WHAT ARE STOCKS?</h2></Card.Header>\n                        <Card.Body>\n                        <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pellentesque, dui ac convallis consequat, ipsum lacus varius nisl, at tincidunt lorem velit vel elit. Vivamus neque dolor, dapibus ac iaculis vel, dapibus et risus. Etiam maximus dolor quis dignissim tristique. Fusce felis enim, dapibus at orci eget, gravida hendrerit dolor. Nam sit amet sagittis augue, at scelerisque sem. Cras rhoncus leo in eros viverra mollis in quis est. Donec id dapibus turpis, ut bibendum quam. Nunc finibus risus a tortor ornare vestibulum. Sed auctor tellus eget elementum pulvinar. Duis aliquet ante vel pulvinar pellentesque. Etiam venenatis tellus maximus consectetur dignissim.</Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <div className='w-100 d-lg-none mt-2 mb-2'></div>\n                    <Card bg='secondary' className='shadow-lg'>\n                        <Card.Header><h2 className='font-weight-light mb-0 text-center'>WHAT IS FOREX?</h2></Card.Header>\n                        <Card.Body>\n                        <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent justo felis, euismod quis nulla ut, varius rhoncus elit. Praesent augue tortor, ornare eget dapibus sit amet, sagittis a ligula. Integer facilisis, quam vel tempus tempor, nibh nisl euismod sapien, eget placerat magna eros in orci. Vestibulum velit erat, dictum sed cursus imperdiet, rutrum ac risus. Mauris purus lorem, vehicula at libero eu, vulputate faucibus dolor. Pellentesque quis lacus pretium, consequat arcu id, aliquet nisl. Praesent quis pharetra elit, eget bibendum odio. Morbi non ligula non turpis congue blandit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras eleifend quam justo, ac posuere tellus dictum a.</Card.Text>\n                        </Card.Body>\n                    </Card>\n                </CardDeck>\n            </Container>\n        )\n    }\n}","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\"\nimport './scss/custom.scss'\n\nimport axios from 'axios'\n// import TradingViewWidget from 'react-tradingview-widget';\n// <TradingViewWidget symbol=\"TSLA\" interval='30' hide_top_toolbar='true' width={'100%'} height={'20em'}/>\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n// import Card from 'react-bootstrap/Card'\n// import CardDeck from 'react-bootstrap/CardDeck'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Nav from 'react-bootstrap/Nav'\nimport FormControl from 'react-bootstrap/FormControl'\n\nimport AlertsList from './components/alerts-list.component'\nimport TeamBio from './components/team-bio.component'\nimport TradingInfo from './components/trading-info.component'\n\nconst stripePromise = loadStripe('pk_test_51IDpHFIRiN8NewytzC0856E85t72Bd2zF2Kn7sWSRgrZS8HlcQmCQNdEbXDqLrFIXuPJIf5arF9ojL7V5l32hpvL00UaiQd0BI')\nlet memberCount = 777;\nlet userKey = 'PASSWORD';\n\nfunction signUpText(members) {\n  let dollars=0;\n  let tier=0;\n  let prevTier=0;\n  if (members<100) {dollars=50; tier=100; prevTier=0;}\n  else if (members<500) {dollars=100; tier=400; prevTier=100;}\n  else if (members<1500) {dollars=150; tier=1000; prevTier=500;}\n  else if (members<3000) {dollars=200; tier=1500; prevTier=1500}\n  else return 'All slots filled! Grab some popcorn while you watch us win :)'\n\n  return tier + prevTier - members + ' slots open for $' + dollars + '/mo pricing';\n}\n\nfunction App() {\n  const [count, setCount] = useState(memberCount);\n  const [key, setKey] = useState(userKey);\n  const [isLoading, setLoading] = useState(false);\n\n  const checkoutClick = async (event) => {\n    setLoading(true);\n    // Get Stripe.js instance\n    const stripe = await stripePromise;\n    // Call your backend to create the Checkout Session\n    const response = await axios.post('https://alertigo-api.herokuapp.com/create-checkout-session');\n    // console.log(response);\n    const session = await response.data;\n\n    // When the customer clicks on the button, redirect them to Checkout.\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id,\n    });\n    if (result.error) {\n      // If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `result.error.message`.\n      console.log(result.error.message);\n    }\n  }\n\n  useEffect(() => {\n    if (isLoading) {\n      checkoutClick().then(() => {\n        setLoading(false);\n      });\n    }\n  }, [isLoading]);\n\n\n  return (\n    <Container fluid className='p-0'>\n      <Navbar bg='secondary' expand='xl' sticky='top' className='shadow-lg text-left justify-content-left'>\n        <Navbar.Brand className='ml-xl-auto'>\n          <Jumbotron className='bg-secondary p-0 mb-0'>\n            <h1 className='text-dark mb-0'>ALERTIGO</h1>\n            <p className='d-none d-xl-block text-dark mb-0'>LEARN TO TRADE 1% BETTER THAN THE COMPETITION</p>\n          </Jumbotron>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"main-nav\"/>\n        <Navbar.Collapse id=\"main-nav\">\n          <Nav className='text-dark ml-auto'>\n            <Nav.Link href='http://twitter.com/alertigo'>TWITTER</Nav.Link>\n            <Nav.Link href='http://facebook.com/alertigo'>FACEBOOK</Nav.Link>\n            <Nav.Link href='http://instagram.com/alertigo'>INSTAGRAM</Nav.Link>\n          </Nav>\n          {/* COUNTER\n          <Navbar.Text>\n            <input className='text-dark ml-3' style={{width: '2.5em', background: 'none', border: 'none'}} type='text' value={count} onChange={(e) => setCount(e.target.value)} />\n            <span className='text-dark'>MEMBERS & COUNTING</span>\n          </Navbar.Text> */}\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"w-25 m-3\" value={count} onChange={(e) => setCount(e.target.value)} />\n            {/* <FormControl type=\"text\" placeholder=\"Search\" className=\"m-3\" value={key} onChange={(e) => setKey(e.target.value)} /> */}\n            <Button variant=\"outline-dark\">Use the textfield to change simulated members</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n      <Container>\n        {/* NAVBAR */}\n        {/* ALERTS */}\n        <AlertsList/> \n        {/* WHO TF ARE YOU */}\n        <TeamBio/>\n        {/* WHAT IS TRADING */}\n        <TradingInfo/>\n        {/* SIGN UP SECTION */}\n      </Container>\n      <Navbar bg='secondary' className='shadow-lg'>\n        <Container className='justify-content-center'>\n          <Row className='justify-content-center p-5'>\n            <Col xs={12} className='text-center mb-4'>\n              <Button size='lg' variant='primary' className='shadow text-dark p-4' disabled={isLoading || count>=3000} onClick={!isLoading ? checkoutClick : null}>\n                <h1 className='font-weight-light'>{count>=3000 ? \"CAN'T\" : ''} {isLoading ? 'LOADING...' : 'SUBSCRIBE TO ALERTIGO'}</h1>\n                <h4>{isLoading ? \"Welcome to financial freedom\" : signUpText(count)}</h4>\n              </Button>\n            </Col><h3 className={(count>0 ? 'w-100 p-4 text-dark' : 'invisible')}>$50/MONTH PRICING: 100 MEMBERS</h3>\n            <ProgressBar className={(count>0 ? 'w-100 mb-2 shadow-lg' : 'invisible')} min={0} max={100} now={count} label={(count>100 ? 100 : count) + '/100'} />\n            <h3 className={(count-100>0 ? 'w-100 p-4 text-dark' : 'invisible')}>$100/MONTH PRICING: 400 MEMBERS</h3>\n            <ProgressBar className={(count-100>0 ? 'w-100 mb-2 shadow-lg' : 'invisible')} min={100} max={500} now={count} label={(count-100>400 ? 400 : count-100) + '/400'}/>\n            <h3 className={(count-500>0 ? 'w-100 p-4 text-dark' : 'invisible')}>$150/MONTH PRICING: 1000 MEMBERS</h3>\n            <ProgressBar className={(count-500>0 ? 'w-100 mb-2 shadow-lg' : 'invisible')} min={500} max={1500} now={count} label={(count-500>1000 ? 1000 : count-500) + '/1000'}/>\n            <h3 className={(count-1500>0 ? 'w-100 p-4 text-dark' : 'invisible')}>$200/MONTH PRICING: 1500 MEMBERS</h3>\n            <ProgressBar className={(count-1500>0 ? 'w-100 mb-2 shadow-lg' : 'invisible')} min={1500} max={3000} now={count} label={(count-1500>1500 ? 1500 : count-1500) + '/1500'}/>\n          </Row>\n        </Container>\n      </Navbar>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}