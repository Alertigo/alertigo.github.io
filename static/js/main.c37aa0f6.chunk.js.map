{"version":3,"sources":["components/alerts-list.component.js","components/team-bio.component.js","components/trading-info.component.js","App.js","reportWebVitals.js","index.js"],"names":["formatDate","time","split","year","substring","formatTime","offset","Date","getTimezoneOffset","timeStr","hours","ampm","ContextAwareToggle","children","eventKey","isCurrentEventKey","useContext","AccordionContext","Accordion","Toggle","style","block","className","as","Button","variant","AlertsList","props","showCreateModal","setState","closeCreateModal","showEditModal","closeEditModal","deleteAlert","url","window","location","href","id","lastIndexOf","axios","post","then","res","onChangeTicker","bind","onChangeStance","onChangeEntry","onChangeExit","onChangeSynopsis","onChangeAuthor","onSubmit","state","alerts","ticker","stance","entry","exit","synopsis","author","show","valid","e","this","target","value","currentTarget","checkValidity","preventDefault","stopPropagation","stanceBool","newAlert","get","response","data","catch","error","console","log","val","reverse","map","currentAlert","i","Card","bg","text","Row","Col","xs","Collapse","Body","display","Footer","to","_id","onClick","Container","Modal","size","centered","onHide","Header","closeButton","Title","Form","validated","Group","lg","controlId","Control","onChange","placeholder","required","Text","Check","inline","type","checked","label","sm","rows","CardColumns","alertList","Component","TeamBio","Jumbotron","fluid","CardDeck","TradingInfo","stripePromise","loadStripe","signUpText","members","dollars","tier","prevTier","App","useState","count","setCount","isLoading","setLoading","checkoutClick","event","a","stripe","session","redirectToCheckout","sessionId","result","message","useEffect","Navbar","expand","sticky","Brand","aria-controls","Nav","Link","FormControl","path","exact","component","md","disabled","ProgressBar","min","max","now","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c37aa0f6.chunk.js","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, {Component, useContext} from 'react';\nimport { Link } from 'react-router-dom';\nimport '../scss/custom.scss'\n\nimport axios from 'axios';\n\n//react bootstrap imports\nimport Accordion from \"react-bootstrap/Accordion\";\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport CardColumns from 'react-bootstrap/CardColumns'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n// import Alert from 'react-bootstrap/Alert'\n\n// import { useAccordionToggle } from \"react-bootstrap\";\n\nconst formatDate = (time) => {\n    // console.log(time)\n    let [year, month, date] = time.split(\"-\")\n    let newDate = date.substring(0, 2)\n    let newYear = year.substring(2, 4)\n    return month+'/'+newDate+'/'+newYear\n}\n\nconst formatTime = (time) => {\n    let offset = (new Date().getTimezoneOffset())/60\n    let timeStr = time.split(\"T\")\n    let hours = timeStr[1].substring(0,2) - offset\n    let mins = timeStr[1].substring(3,5)\n    let ampm = ''\n    if(hours>12) {\n        hours-=12\n        ampm=\"PM\"\n    } else if (hours===0) {\n        hours=12\n        ampm=\"AM\"\n    } if(hours<0) {\n        hours+=12\n        ampm=\"PM\"\n    } else {\n        ampm=\"AM\"\n    }\n    return hours + ':' + mins + ampm\n}\n\nfunction ContextAwareToggle({ children, eventKey }) {\n    const currentEventKey = useContext(AccordionContext);\n  \n    const isCurrentEventKey = currentEventKey === eventKey;\n  \n    return (\n        <Accordion.Toggle style={{'borderBottomRightRadius': isCurrentEventKey ? '0' : '', 'borderBottomLeftRadius': isCurrentEventKey ? '0' : '' }} block className='shadow text-dark' as={Button}  variant='primary' eventKey={eventKey}>\n            {children}\n        </Accordion.Toggle>\n    );\n}\n\nexport default class AlertsList extends Component {\n    constructor(props){\n        super(props);\n\n        this.onChangeTicker = this.onChangeTicker.bind(this);\n        this.onChangeStance = this.onChangeStance.bind(this);\n        this.onChangeEntry = this.onChangeEntry.bind(this);\n        this.onChangeExit = this.onChangeExit.bind(this);\n        this.onChangeSynopsis = this.onChangeSynopsis.bind(this);\n        this.onChangeAuthor = this.onChangeAuthor.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            alerts: [],\n            ticker: '',\n            stance: 'true',\n            entry: '',\n            exit: '',\n            synopsis: '',\n            author: '',\n            show: false,\n            valid: false,\n            showCreateModal:false,\n            showEditModal:false\n        }\n    }\n\n    onChangeTicker(e) {\n        this.setState({\n            ticker: e.target.value\n        });\n    }\n\n    onChangeStance(e) {\n        this.setState({\n            stance: e.target.value\n        });\n    }\n\n    onChangeEntry(e) {\n        this.setState({\n            entry: e.target.value\n        });\n    }\n\n    onChangeExit(e) {\n        this.setState({\n            exit: e.target.value\n        });\n    }\n\n    onChangeSynopsis(e) {\n        this.setState({\n            synopsis: e.target.value\n        });\n    }\n\n    onChangeAuthor(e) {\n        this.setState({\n            author: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        // e.preventDefault();\n        const form = e.currentTarget;\n        if (form.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        } else {\n            let stanceBool = true;\n            if(this.state.stance === 'true') stanceBool = true;\n            else stanceBool = false;\n            const newAlert = {\n                ticker: this.state.ticker,\n                stance: stanceBool,\n                entry: this.state.entry,\n                exit: this.state.exit,\n                synopsis: this.state.synopsis,\n                time: new Date(),\n                author: this.state.author\n            };\n            axios.post('https://alertigo-api.herokuapp.com/alerts/add', newAlert)\n                .then(res => this.setState({showCreateModal: false}));\n    \n            this.setState({\n                ticker: '',\n                stance: false,\n                entry: '',\n                exit: '',\n                synopsis: '',\n                author: ''\n            })\n            this.setState({valid: true})\n            e.preventDefault()\n\n        }\n    }\n\n    componentDidMount() {\n        axios.get('https://alertigo-api.herokuapp.com/alerts')\n            .then(response => {\n                this.setState({alerts: response.data});\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }\n\n    alertList() {\n        let val=0    \n        return this.state.alerts.reverse().map((currentAlert, i) => {\n            val++;\n            return (\n                // <Row>\n                    /* <Col xs={12}>\n                        <Alert alert={currentAlert} num={val} key={i}></Alert>\n                    </Col>\n                    <Col xs={12}>\n                        <Link to={'/alerts/' + currentAlert._id}><Button className='text-dark' variant='primary' onClick={this.showEditModal}>Edit Alert</Button></Link>\n                    </Col> */\n\n\n                    <Card bg='primary' text='dark' className='border-0 mt-4 mb-4'>\n                        <ContextAwareToggle eventKey={val}>\n                            <h2 className='mb-0'>{currentAlert.ticker}</h2>\n                            <h5 className='mb-0'>{(currentAlert.stance ? 'BULLISH' : 'BEARISH')}</h5>\n                            <Row>\n                                <Col xs={12}>ENTRY TARGET: {currentAlert.entry}</Col>\n                                <Col xs={12}>EXIT TARGET: {currentAlert.exit}</Col><br/>\n                            </Row>\n                            <small>{formatTime(currentAlert.time)} </small>\n                        </ContextAwareToggle>\n                        <Accordion.Collapse eventKey={val}>\n                            <Card.Body className='p-0 text-center text-dark'>\n                                <p style={{display: currentAlert.synopsis === '' ? 'none' : 'block'}} className='mt-3 p-3'>{currentAlert.synopsis}</p>\n                                {/* <p>{props.alert._id}</p> */}\n                                <Card.Footer >\n                                    <small className=\"text-dark text-muted mt-0\">Posted by {currentAlert.author} on {formatDate(currentAlert.time)}</small><br/>\n                                    <Link to={'/alerts/' + currentAlert._id}><Button className='text-dark mt-2' variant='secondary' onClick={this.showEditModal}>Edit Alert</Button></Link>\n                                </Card.Footer>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                // </Row>\n            )\n        })\n    }\n\n    showCreateModal = () => {this.setState({showCreateModal: true})}\n    closeCreateModal = () => {this.setState({showCreateModal: false})}\n    showEditModal = () => {this.setState({showEditModal: true})}\n    closeEditModal = () => {this.setState({showEditModal: false})}\n\n    deleteAlert = () => {\n        let url = window.location.href\n        let id = url.substring(url.lastIndexOf('/') + 1);\n\n        axios.post('https://alertigo-api.herokuapp.com/alerts/remove/'+id)\n            .then(res => this.setState({showEditModal: false}));\n    }\n\n    render() {\n        return (\n            <Container>\n                <Modal size='lg' centered show={this.state.showCreateModal} onHide={this.closeCreateModal}>\n                    <Modal.Header className='bg-primary border-0 text-dark' closeButton>\n                        <Modal.Title >POST A NEW ALERT</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body className='bg-secondary' >\n                        {/* <Alert show={this.state.show} className='w-50 bg-primary border-0 text-center ml-auto mr-auto mb-5 p-4' variant=\"dark\">\n                            <Alert.Heading className='text-dark mb-4'>Alert Posted Successfully!</Alert.Heading>\n                            <Button onClick={() => this.setState({show: false})} variant=\"outline-secondary\" className='text-dark'>\n                                Close this popup\n                            </Button>\n                        </Alert> */}\n                        <Form validated={this.state.valid} onSubmit={this.onSubmit}>\n                            <Row className='text-center'>\n                                <Form.Group as={Col} xs={6} lg={3} controlId=\"ticker\">\n                                    <Form.Control \n                                        value={this.state.ticker}\n                                        onChange={this.onChangeTicker}\n                                        placeholder=\"TICKER\"\n                                        className='bg-primary border-0'\n                                        required\n                                            />\n                                    <Form.Text className='text-dark'>\n                                        For stock options, write your contract here. Example: \"AMZN 04/19 1000C\"\n                                    </Form.Text>\n                                </Form.Group>\n                                <Form.Group as={Col} xs={6} lg={3} controlId=\"entry\">\n                                    <Form.Control \n                                        value={this.state.entry}\n                                        onChange={this.onChangeEntry}\n                                        placeholder=\"ENTRY\"\n                                        className='bg-primary border-0'\n                                        required\n                                            />\n                                    <Form.Text className='text-dark'>\n                                        Doesn't have to be a number. \"Below 100\" or \"Above 400\" works\n                                    </Form.Text>\n                                </Form.Group>\n                                <Form.Group as={Col} xs={6} lg={3} controlId=\"exit\">\n                                    <Form.Control \n                                        value={this.state.exit}\n                                        onChange={this.onChangeExit}\n                                        placeholder=\"EXIT\"\n                                        className='bg-primary border-0'\n                                        required\n                                            />\n                                    <Form.Text className='text-dark'>\n                                        Doesnt have to be a number. \"ATH\" works\n                                    </Form.Text>\n                                </Form.Group>\n                                <Form.Group as={Col} xs={6} lg={3} controlId=\"author\">\n                                    <Form.Control \n                                        value={this.state.author}\n                                        onChange={this.onChangeAuthor}\n                                        placeholder=\"AUTHOR\"\n                                        className='bg-primary border-0'\n                                        required \n                                        />\n                                    <Form.Text className='text-dark'>\n                                        Capitalize the first letter. It'll look better\n                                    </Form.Text>\n                                </Form.Group>\n                                <Form.Group required className='text-dark' as={Col} xs={12}  controlId=\"stance\">\n                                    <Form.Check inline \n                                        type=\"radio\" \n                                        value='true'\n                                        checked={this.state.stance === 'true'} \n                                        onChange={this.onChangeStance}\n                                        label=\"BULLISH\"\n                                        />\n                                    <Form.Check inline \n                                        type=\"radio\" \n                                        value='false'\n                                        checked={this.state.stance === 'false'} \n                                        onChange={this.onChangeStance}\n                                        label=\"BEARISH\"\n                                        />\n                                    <Form.Text className='text-dark'>\n                                        Bull = going up, Bear = going down. Just in case :]\n                                    </Form.Text>\n                                </Form.Group>\n                            </Row>\n                            <Row className='justify-content-center'>\n                                <Form.Group as={Col} xs={12} sm={10} lg={11} controlId=\"synopsis\">\n                                    <Form.Control as='textarea'\n                                        rows='2'\n                                        value={this.state.synopsis}\n                                        onChange={this.onChangeSynopsis}\n                                        placeholder=\"SYNOPSIS (OPTIONAL)\"\n                                        className='bg-primary border-0'/>\n                                </Form.Group>\n                                <Form.Group className='mb-0'>\n                                    <Button type='submit' className='text-dark' variant=\"primary\" >Submit</Button>\n                                </Form.Group>\n                            </Row>\n                        </Form>\n                    </Modal.Body>\n                    {/* <Modal.Footer className='bg-primary'>\n                        <Button onClick={this.deleteAlert} variant='secondary' className='text-dark'>Delete</Button>\n                    </Modal.Footer> */}\n                </Modal>\n                <Modal size='lg' centered show={this.state.showEditModal} onHide={this.closeEditModal}>\n                    <Modal.Header className='bg-primary border-0 text-dark' closeButton>\n                        <Modal.Title >EDIT AN ALERT</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body className='bg-secondary'>\n                        <Button onClick={this.deleteAlert} variant='primary' className='text-dark'>Delete</Button>\n                    </Modal.Body>\n                </Modal>\n                <Accordion>\n                    <CardColumns className='m-5'>\n                        <Card bg='primary' text='dark' className='shadow border-0 mt-4 mb-4 text-center align-items-center'>\n                            <Button className='pt-5 pb-5 w-100 text-dark' onClick={this.showCreateModal}><h2 className='mt-1 mb-2'>NEW ALERT</h2></Button>\n                        </Card>\n                        {this.alertList()}\n                    </CardColumns>\n                </Accordion>\n            </Container>  \n        )\n    }\n}","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, {Component} from 'react';\nimport '../scss/custom.scss'\n\n//react bootstrap imports\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Card from 'react-bootstrap/Card'\nimport CardDeck from 'react-bootstrap/CardDeck'\n\nexport default class TeamBio extends Component {\n    render() {\n        return (\n            <Container className='mt-2 pt-2'>\n                <Row xs='auto' className='justify-content-center mt-5'>\n                    <Jumbotron fluid className='bg-primary shadow-lg rounded mb-0 p-4'>\n                    <h1 className='text-center font-weight-light text-dark mb-0'>\n                    WHO IS ALERTIGO?\n                    </h1>\n                    </Jumbotron>\n                </Row>\n                <CardDeck className='mt-5 mb-5 text-dark'>\n                    <Card bg='primary' className='shadow-lg'>\n                        <Card.Header><h2 className='font-weight-light mb-0 text-center'>LEAPS TRADER</h2></Card.Header>\n                        <Card.Body>\n                        <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a lectus turpis. Sed ipsum lorem, commodo vel egestas et, aliquam at metus. Nam ut bibendum odio, nec efficitur sapien. Aenean finibus pulvinar massa at volutpat. Integer tempus lacus at sapien congue lobortis. Nullam feugiat, sapien ac molestie convallis, nisi est cursus mi, ac imperdiet felis leo at velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam sodales quis massa eu aliquet. Morbi at nulla quis lacus congue dictum. Duis in tincidunt neque, id porta tortor. Proin et dignissim turpis, eget fringilla orci. Aenean mauris elit, rutrum non tortor eget, rutrum condimentum magna.</Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <div className='w-100 d-md-none mt-2 mb-2'></div>\n                    <Card bg='primary' className='shadow-lg'>\n                        <Card.Header><h2 className='font-weight-light mb-0 text-center'>CHRIS GARCIA</h2></Card.Header>\n                        <Card.Body>\n                        <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pellentesque, dui ac convallis consequat, ipsum lacus varius nisl, at tincidunt lorem velit vel elit. Vivamus neque dolor, dapibus ac iaculis vel, dapibus et risus. Etiam maximus dolor quis dignissim tristique. Fusce felis enim, dapibus at orci eget, gravida hendrerit dolor. Nam sit amet sagittis augue, at scelerisque sem. Cras rhoncus leo in eros viverra mollis in quis est. Donec id dapibus turpis, ut bibendum quam. Nunc finibus risus a tortor ornare vestibulum. Sed auctor tellus eget elementum pulvinar. Duis aliquet ante vel pulvinar pellentesque. Etiam venenatis tellus maximus consectetur dignissim.</Card.Text>\n                        </Card.Body>\n                    </Card>\n                </CardDeck>\n            </Container>\n        )\n    }\n}","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, {Component} from 'react';\nimport '../scss/custom.scss'\n\n//react bootstrap imports\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Card from 'react-bootstrap/Card'\nimport CardDeck from 'react-bootstrap/CardDeck'\n\nexport default class TradingInfo extends Component {\n    render() {\n        return (\n            <Container className='mt-2 pb-3'>\n                <Row xs='auto' className='justify-content-center mt-5'>\n                    <Jumbotron fluid className='bg-primary shadow-lg rounded mb-0 p-4'>\n                        <h1 className='text-center font-weight-light text-dark mb-0'>\n                            WHAT IS TRADING?\n                        </h1>\n                    </Jumbotron>\n                </Row>\n                <CardDeck className='mt-5 mb-5 text-dark'>\n                    <Card bg='primary' className='shadow-lg'>\n                        <Card.Header><h2 className='font-weight-light mb-0 text-center'>WHAT IS CRYPTO?</h2></Card.Header>\n                        <Card.Body>\n                        <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a lectus turpis. Sed ipsum lorem, commodo vel egestas et, aliquam at metus. Nam ut bibendum odio, nec efficitur sapien. Aenean finibus pulvinar massa at volutpat. Integer tempus lacus at sapien congue lobortis. Nullam feugiat, sapien ac molestie convallis, nisi est cursus mi, ac imperdiet felis leo at velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam sodales quis massa eu aliquet. Morbi at nulla quis lacus congue dictum. Duis in tincidunt neque, id porta tortor. Proin et dignissim turpis, eget fringilla orci. Aenean mauris elit, rutrum non tortor eget, rutrum condimentum magna.</Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <div className='w-100 d-lg-none mt-2 mb-2'></div>\n                    <Card bg='primary' className='shadow-lg'>\n                        <Card.Header><h2 className='font-weight-light mb-0 text-center'>WHAT ARE STOCKS?</h2></Card.Header>\n                        <Card.Body>\n                        <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pellentesque, dui ac convallis consequat, ipsum lacus varius nisl, at tincidunt lorem velit vel elit. Vivamus neque dolor, dapibus ac iaculis vel, dapibus et risus. Etiam maximus dolor quis dignissim tristique. Fusce felis enim, dapibus at orci eget, gravida hendrerit dolor. Nam sit amet sagittis augue, at scelerisque sem. Cras rhoncus leo in eros viverra mollis in quis est. Donec id dapibus turpis, ut bibendum quam. Nunc finibus risus a tortor ornare vestibulum. Sed auctor tellus eget elementum pulvinar. Duis aliquet ante vel pulvinar pellentesque. Etiam venenatis tellus maximus consectetur dignissim.</Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <div className='w-100 d-lg-none mt-2 mb-2'></div>\n                    <Card bg='primary' className='shadow-lg'>\n                        <Card.Header><h2 className='font-weight-light mb-0 text-center'>WHAT IS FOREX?</h2></Card.Header>\n                        <Card.Body>\n                        <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent justo felis, euismod quis nulla ut, varius rhoncus elit. Praesent augue tortor, ornare eget dapibus sit amet, sagittis a ligula. Integer facilisis, quam vel tempus tempor, nibh nisl euismod sapien, eget placerat magna eros in orci. Vestibulum velit erat, dictum sed cursus imperdiet, rutrum ac risus. Mauris purus lorem, vehicula at libero eu, vulputate faucibus dolor. Pellentesque quis lacus pretium, consequat arcu id, aliquet nisl. Praesent quis pharetra elit, eget bibendum odio. Morbi non ligula non turpis congue blandit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras eleifend quam justo, ac posuere tellus dictum a.</Card.Text>\n                        </Card.Body>\n                    </Card>\n                </CardDeck>\n            </Container>\n        )\n    }\n}","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState, useEffect } from \"react\";\n//import {Link} from react router\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\"\nimport './scss/custom.scss'\n\nimport axios from 'axios'\n// import TradingViewWidget from 'react-tradingview-widget';\n// <TradingViewWidget symbol=\"TSLA\" interval='30' hide_top_toolbar='true' width={'100%'} height={'20em'}/>\n\n// import Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n// import Card from 'react-bootstrap/Card'\n// import CardDeck from 'react-bootstrap/CardDeck'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Nav from 'react-bootstrap/Nav'\nimport FormControl from 'react-bootstrap/FormControl'\n\nimport AlertsList from './components/alerts-list.component'\nimport TeamBio from './components/team-bio.component'\nimport TradingInfo from './components/trading-info.component'\n\nconst stripePromise = loadStripe('pk_test_51IDpHFIRiN8NewytzC0856E85t72Bd2zF2Kn7sWSRgrZS8HlcQmCQNdEbXDqLrFIXuPJIf5arF9ojL7V5l32hpvL00UaiQd0BI')\nlet memberCount = 777;\n// let userKey = 'PASSWORD';\n\nfunction signUpText(members) {\n  let dollars=0;\n  let tier=0;\n  let prevTier=0;\n  if (members<100) {dollars=50; tier=100; prevTier=0;}\n  else if (members<500) {dollars=100; tier=400; prevTier=100;}\n  else if (members<1500) {dollars=150; tier=1000; prevTier=500;}\n  else if (members<3000) {dollars=200; tier=1500; prevTier=1500}\n  else return 'All slots filled! Grab some popcorn while you watch us win :)'\n\n  return tier + prevTier - members + ' slots open for $' + dollars + '/mo pricing';\n}\n\nfunction App() {\n  const [count, setCount] = useState(memberCount);\n  // const [key, setKey] = useState(userKey);\n  const [isLoading, setLoading] = useState(false);\n\n  const checkoutClick = async (event) => {\n    setLoading(true);\n    // Get Stripe.js instance\n    const stripe = await stripePromise;\n    // Call your backend to create the Checkout Session\n    const response = await axios.post('https://alertigo-api.herokuapp.com/create-checkout-session');\n    // console.log(response);\n    const session = await response.data;\n\n    // When the customer clicks on the button, redirect them to Checkout.\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id,\n    });\n    if (result.error) {\n      // If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `result.error.message`.\n      console.log(result.error.message);\n    }\n  }\n\n  useEffect(() => {\n    if (isLoading) {\n      checkoutClick().then(() => {\n        setLoading(false);\n      });\n    }\n  }, [isLoading]);\n\n\n  return (\n    // <Container fluid className='p-0'>\n    <Router>\n      <Navbar bg='dark' expand='xl' sticky='top' className='shadow-lg text-left justify-content-left'>\n        <Navbar.Brand className='ml-xl-auto'>\n          <Jumbotron className='text-primary bg-transparent p-2 mb-0'>\n            <h1 className='mb-0'>ALERTIGO</h1>\n            <p className='d-none d-xl-block mb-0'>LEARN TO TRADE 1% BETTER THAN THE COMPETITION</p>\n          </Jumbotron>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"main-nav\"/>\n        <Navbar.Collapse id=\"main-nav\">\n          <Nav className='ml-auto'>\n            <Nav.Link className='text-primary' as={Link} to='/'>HOME</Nav.Link>\n            <Nav.Link className='text-primary' as={Link} to='/alerts'>ALERTS</Nav.Link>\n            <Nav.Link className='text-secondary'>Use textfield to simulate members</Nav.Link>\n          </Nav>\n          {/* COUNTER\n          <Navbar.Text>\n            <input className='text-dark ml-3' style={{width: '2.5em', background: 'none', border: 'none'}} type='text' value={count} onChange={(e) => setCount(e.target.value)} />\n            <span className='text-dark'>MEMBERS & COUNTING</span>\n          </Navbar.Text> */}\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"w-25 m-3\" value={count} onChange={(e) => setCount(e.target.value)} />\n            {/* <FormControl type=\"text\" placeholder=\"Search\" className=\"m-3\" value={key} onChange={(e) => setKey(e.target.value)} /> */}\n            {/* <Button variant=\"outline-dark\">SIGN IN</Button> */}\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Route path=\"/\" exact>\n        <TeamBio/>\n        <TradingInfo/>\n      </Route>\n      <Route path=\"/alerts\" component={AlertsList} />\n\n      <Navbar fluid  bg='dark' className='shadow-lg pt-5 pb-4 pl-5 pr-5'>\n        {/* <Container  className='justify-content-center'> */}\n          <Row className='align-items-center m-auto'>\n            <Col xs={12} md={6}  className='text-center mb-4 pl-4 pr-4'>\n              <Button size='lg' variant='primary' className='shadow text-dark p-4' disabled={isLoading || count>=3000} onClick={!isLoading ? checkoutClick : null}>\n                <h1 className='font-weight-light'>{count>=3000 ? \"CAN'T\" : ''} {isLoading ? 'LOADING...' : 'SUBSCRIBE TO ALERTIGO'}</h1>\n                <h4>{isLoading ? \"Welcome to financial freedom\" : signUpText(count)}</h4>\n              </Button>\n            </Col>\n            <Col xs={12} md={6}  className='text-primary pl-4 pr-4'>\n                  <h3 className={(count>0 ? 'w-100' : 'd-none')}>$50/MONTH:</h3>\n                  <ProgressBar className={(count>0 ? 'w-100 mb-4 shadow-lg' : 'd-none')} min={0} max={100} now={count} label={((count/100)*100) > 25 ? ((count>100 ? 100 : count) + '/100') : ''} />\n                  <h3 className={(count-100>0 ? 'w-100' : 'd-none')}>$100/MONTH:</h3>\n                  <ProgressBar className={(count-100>0 ? 'w-100 mb-4 shadow-lg' : 'd-none')} min={100} max={500} now={count} label={(((count-100)/400)*100) > 25 ? ((count-100>400 ? 400 : count-100) + '/400') : ''}/>\n                   <h3 className={(count-500>0 ? 'w-100' : 'd-none')}>$150/MONTH:</h3>\n                  <ProgressBar className={(count-500>0 ? 'w-100 mb-4 shadow-lg' : 'd-none')} min={500} max={1500} now={count} label={(((count-500)/1000)*100) > 25 ? ((count-500>1000 ? 1000 : count-500) + '/1000') : ''}/>\n                  <h3 className={(count-1500>0 ? 'w-100' : 'd-none')}>$200/MONTH:</h3>\n                  <ProgressBar className={(count-1500>0 ? 'w-100 mb-4 shadow-lg' : 'd-none')} min={1500} max={3000} now={count} label={(((count-1500)/1500)*100) > 25 ? ((count-1000>1500 ? 1500 : count-1000) + '/1500') : ''}/>\n            </Col>\n          </Row>\n        {/* </Container> */}\n      </Navbar>\n    </Router>\n    // {/* </Container> */}\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}