{"version":3,"sources":["components/alerts/new-alert-card.component.js","components/alerts/create-alert-modal.component.js","components/alerts/edit-alert-modal.component.js","components/alerts/alert-card-toggle.component.js","components/alerts/alert-card.component.js","components/alerts/alerts-list.component.js","components/homepage/team-bio.component.js","components/homepage/trading-info.component.js","components/create-account.component.js","components/site/top-nav.component.js","components/site/bottom-nav.ccomponent.js","components/site/restricted-content.component.js","App.js","reportWebVitals.js","index.js"],"names":["NewAlertCard","children","showCreateModal","Card","as","Col","xs","lg","bg","text","className","Button","onClick","CreateAlertModal","closeCreateModal","userName","alertType","useState","ticker","setTicker","entry","setEntry","exit","setExit","stance","setStance","postDiscord","setPostDiscord","synopsis","setSynopsis","valid","setValid","Modal","size","centered","show","onHide","Header","closeButton","Title","Body","Form","noValidate","validated","onSubmit","e","form","currentTarget","checkValidity","preventDefault","stopPropagation","newAlert","Date","axios","post","then","res","Row","Group","Control","onChange","target","value","placeholder","required","rows","Check","inline","type","checked","label","variant","EditAlertModal","showEditModal","closeEditModal","useEffect","url","window","location","href","id","substring","lastIndexOf","length","get","data","to","AlertCardToggle","alertKey","alert","isCurrentEventKey","useContext","AccordionContext","Accordion","Toggle","style","block","eventKey","time","offset","getTimezoneOffset","timeStr","split","hours","ampm","formatTime","AlertCard","admin","Collapse","display","Footer","author","year","formatDate","_id","AlertsList","alerts","setAlerts","createModal","setCreateModal","editModal","setEditModal","response","newAlerts","reverse","catch","error","console","log","Container","CardColumns","map","currentAlert","TeamBio","Jumbotron","fluid","CardDeck","Text","Component","TradingInfo","CreateAccount","name","setName","email","setEmail","crypto","setCrypto","shares","setShares","options","setOptions","forex","setForex","setAdmin","member","setMember","setAllAlerts","enabled","newAccount","md","disabled","TopNavbar","Link","Navbar","expand","sticky","Brand","aria-controls","Nav","NavDropdown","title","Item","BottomNavbar","count","stripePromise","isLoading","setLoading","checkoutClick","useCallback","event","a","stripe","session","redirectToCheckout","sessionId","result","message","members","dollars","tier","signUpText","ProgressBar","min","max","now","RestrictedContent","clearance","App","pass","setPass","loggedIn","setLoggedIn","loggedInCrypto","setLoggedInCrypto","loggedInShares","setLoggedInShares","loggedInOptions","setLoggedInOptions","loggedInForex","setLoggedInForex","loggedInAdmin","setLoggedInAdmin","setUserName","loadStripe","setCount","accounts","matchingAccounts","lowerPass","toLowerCase","filter","account","sm","FormControl","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27910a13.chunk.js","sourcesContent":["import Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\n\nconst NewAlertCard = ({children, showCreateModal}) => {\n    return (\n        <Card \n            as={Col} xs={12} lg={4} \n            bg='primary' text='dark' \n            className='shadow border-0 text-center align-items-center\n                    pl-0 pr-0 ml-auto mr-auto mt-4 mb-4'\n        >\n            <Button className='pt-5 pb-5 w-100 text-dark' \n                    onClick={showCreateModal}\n            >\n                <h2 className='mt-1 mb-2'>NEW ALERT</h2>\n            </Button>\n        </Card>\n    )\n}\n\nexport default NewAlertCard","import {useState} from 'react'\n\nimport axios from 'axios';\n\nimport Modal from 'react-bootstrap/Modal'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst CreateAlertModal = ({showCreateModal, closeCreateModal, userName, alertType}) => {\n    const [ticker, setTicker] = useState('')\n    const [entry, setEntry] = useState('')\n    const [exit, setExit] = useState('')\n    const [stance, setStance] = useState(true)\n    const [postDiscord, setPostDiscord] = useState(false)\n    const [synopsis, setSynopsis] = useState('')\n    const [valid, setValid] = useState(false)\n\n    const onSubmit = (e) => {\n        const form = e.currentTarget;\n        setValid(true)\n        if (form.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        } else {\n            const newAlert = {\n                'ticker': ticker,\n                'stance': stance,\n                'entry': entry,\n                'exit': exit,\n                'synopsis': synopsis,\n                'time': new Date(),\n                'author': userName,\n                'postDiscord': postDiscord\n            }\n            axios.post('https://alertigo-api.herokuapp.com/'+ alertType + 'Alerts/add', newAlert)\n                .then(res => {\n                    setTicker('')\n                    setStance(true)\n                    setEntry('')\n                    setExit('')\n                    setSynopsis('')\n                    setPostDiscord(false)\n                    setValid(false)\n                    closeCreateModal()\n                })\n            e.preventDefault()\n        }\n    }\n\n    return (\n        <Modal size='lg' centered \n        show={showCreateModal} onHide={closeCreateModal}\n        >\n            <Modal.Header className='bg-primary border-0 text-dark' closeButton>\n                <Modal.Title >POST A NEW ALERT</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className='bg-secondary rounded-bottom p-3'>\n                <Form noValidate validated={valid} onSubmit={onSubmit}>\n                    <Row className='text-center'>\n                        <Form.Group as={Col} xs={12} lg={4}>\n                            <Form.Control\n                                onChange={e => setTicker(e.target.value)}\n                                placeholder=\"TICKER\"\n                                className='bg-primary border-0 shadow'\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group as={Col} xs={6} lg={4}>\n                            <Form.Control\n                                onChange={e => setEntry(e.target.value)}\n                                placeholder=\"ENTRY\"\n                                className='bg-primary border-0 shadow'\n                                required\n                                    />\n                        </Form.Group>\n                        <Form.Group as={Col} xs={6} lg={4}>\n                            <Form.Control \n                                onChange={e => setExit(e.target.value)}\n                                placeholder=\"EXIT\"\n                                className='bg-primary border-0 shadow'\n                                required\n                            />\n                        </Form.Group>\n                    </Row>\n                    <Row className='justify-content-center text-center align-items-center'>\n                        <Form.Group as={Col} xs={12}>\n                            <Form.Control as='textarea'\n                                rows='2'\n                                onChange={e => setSynopsis(e.target.value)}\n                                placeholder=\"SYNOPSIS (OPTIONAL)\"\n                                className='bg-primary border-0 shadow'\n                            />\n                        </Form.Group>\n                        <Form.Group as={Col} xs={4} required className='m-0'>\n                            <Form.Check inline \n                                type=\"radio\" \n                                checked={stance} \n                                onChange={() => setStance(true)}\n                                label=\"BULLISH\"\n                            />\n                            <Form.Check inline \n                                type=\"radio\"\n                                checked={!stance} \n                                onChange={() => setStance(false)}\n                                label=\"BEARISH\"\n                            />\n                        </Form.Group>\n                        <Form.Group as={Col} xs={4} className='m-0'>\n                            <Form.Check \n                                checked={postDiscord}\n                                onChange={() => setPostDiscord(!postDiscord)}\n                                label=\"Discord?\"\n                            />\n                        </Form.Group>\n\n                        <Form.Group as={Col} xs={4} className='mb-0 text-center'>\n                            <Button type='submit' className='text-dark shadow' variant=\"primary\" >Submit</Button>\n                        </Form.Group>\n                    </Row>\n                </Form>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default CreateAlertModal","import {useEffect, useState} from 'react'\n\nimport { Link } from 'react-router-dom';\n\nimport axios from 'axios';\n\nimport Modal from 'react-bootstrap/Modal'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst EditAlertModal = ({showEditModal, closeEditModal, userName, alertType}) => {\n    const [ticker, setTicker] = useState('')\n    const [entry, setEntry] = useState('')\n    const [exit, setExit] = useState('')\n    const [stance, setStance] = useState(true)\n    const [postDiscord, setPostDiscord] = useState(false)\n    const [synopsis, setSynopsis] = useState('')\n    const [valid, setValid] = useState(false)\n\n    useEffect(() => {\n        const url = window.location.href\n        const id = url.substring(url.lastIndexOf('/') + 1);\n        if(id.length === 24) {\n            axios.get('https://alertigo-api.herokuapp.com/' + alertType + 'Alerts/'+ id)\n                .then(res => {\n                    setTicker(res.data.ticker)\n                    setEntry(res.data.entry)\n                    setExit(res.data.exit)\n                    setStance(res.data.stance)\n                    setSynopsis(res.data.synopsis)\n                    setPostDiscord(res.data.postDiscord)\n                })\n        }\n    }, [showEditModal, alertType])\n    \n    const deleteAlert = () => {\n        let url = window.location.href\n        let id = url.substring(url.lastIndexOf('/') + 1);\n\n        axios.post('https://alertigo-api.herokuapp.com/' + alertType + 'Alerts/remove/'+id)\n            .then(res => {\n                closeEditModal()\n            })\n    }\n\n    const onSubmit = (e) => {\n        let url = window.location.href\n        let id = url.substring(url.lastIndexOf('/') + 1);\n\n        const form = e.currentTarget;\n        setValid(true)\n        if (form.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        } else {\n            const newAlert = {\n                'ticker': ticker,\n                'stance': stance,\n                'entry': entry,\n                'exit': exit,\n                'synopsis': synopsis,\n                'time': new Date(),\n                'author': userName,\n                'postDiscord': postDiscord\n            };\n            axios.post('https://alertigo-api.herokuapp.com/'+ alertType + 'Alerts/update/' + id, newAlert)\n                .then(res => {\n                    setTicker('')\n                    setStance(true)\n                    setEntry('')\n                    setExit('')\n                    setSynopsis('')\n                    setPostDiscord(false)\n                    setValid(false)\n                    closeEditModal()\n                });\n            e.preventDefault()\n        }\n    }\n\n    return (\n        <Modal size='lg' centered show={showEditModal} onHide={closeEditModal}>\n            <Modal.Header className='bg-primary border-0 text-dark' closeButton>\n                <Modal.Title>EDIT AN ALERT</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className='bg-secondary rounded-bottom'>\n                <Form noValidate validated={valid} onSubmit={onSubmit}>\n                    <Row className='text-center'>\n                        <Form.Group as={Col} xs={6} lg={3}>\n                            <Form.Control \n                                value={ticker}\n                                onChange={e => setTicker(e.target.value)}\n                                placeholder=\"TICKER\"\n                                className='bg-primary border-0 shadow'\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group as={Col} xs={6} lg={3}>\n                            <Form.Control \n                                value={entry}\n                                onChange={e => setEntry(e.target.value)}\n                                placeholder=\"ENTRY\"\n                                className='bg-primary border-0 shadow'\n                                required\n                            />\n                        </Form.Group>\n                        <Form.Group as={Col} xs={6} lg={3}>\n                            <Form.Control \n                                value={exit}\n                                onChange={e => setExit(e.target.value)}\n                                placeholder=\"EXIT\"\n                                className='bg-primary border-0 shadow'\n                                required\n                            />\n                        </Form.Group>\n                    </Row>\n                    <Row className='text-center'>\n                    <Form.Group as={Col} xs={6} required>\n                            <Form.Check inline \n                                type=\"radio\" \n                                checked={stance} \n                                onChange={() => setStance(true)}\n                                label=\"BULLISH\"\n                            />\n                            <Form.Check inline \n                                type=\"radio\"\n                                checked={!stance} \n                                onChange={() => setStance(false)}\n                                label=\"BEARISH\"\n                            />\n                        </Form.Group>\n                        <Form.Group as={Col} xs={6}>\n                            <Form.Check \n                                checked={postDiscord}\n                                onChange={() => setPostDiscord(!postDiscord)}\n                                label=\"Post to Discord?\"\n                            />\n                        </Form.Group>\n                    </Row>\n                    <Row className='justify-content-center'>\n                        <Form.Group as={Col} xs={12} lg={11}>\n                            <Form.Control as='textarea' rows='2'\n                                value={synopsis}\n                                onChange={e => setSynopsis(e.target.value)}\n                                placeholder=\"SYNOPSIS (OPTIONAL)\"\n                                className='bg-primary border-0 shadow'/>\n                        </Form.Group>\n                        <Form.Group xs={6} as={Col} className='mb-0'>\n                            <Button type='submit' className='text-dark shadow' variant=\"primary\" >Submit</Button> \n                        </Form.Group>\n                        <Link xs={6} to={'/' + alertType + 'Alerts'} onClick={deleteAlert} as={Col}><Button variant='primary' className='text-dark'>Delete</Button></Link>\n                    </Row>\n                </Form>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default EditAlertModal","import {useContext} from 'react'\n\nimport Accordion from \"react-bootstrap/Accordion\";\nimport AccordionContext from \"react-bootstrap/AccordionContext\";\nimport Button from 'react-bootstrap/Button'\n\nconst AlertCardToggle = ({ children, alertKey, alert }) => {\n    const currentEventKey = useContext(AccordionContext);\n    const isCurrentEventKey = currentEventKey === alertKey;\n    \n    const formatTime = (time) => {\n        let offset = (new Date().getTimezoneOffset())/60\n        let timeStr = time.split(\"T\")\n        let hours = timeStr[1].substring(0,2) - offset\n        let mins = timeStr[1].substring(3,5)\n        let ampm = ''\n        if(hours>12) {\n            hours-=12\n            ampm=\"PM\"\n        } else if (hours===0) {\n            hours=12\n            ampm=\"AM\"\n        } else if(hours<0) {\n            hours = 12+hours\n            ampm=\"PM\"\n        } else {\n            ampm=\"AM\"\n        }\n        return hours + ':' + mins + ampm\n    }\n\n    return (\n        <Accordion.Toggle \n            style={{\n                'borderBottomRightRadius': isCurrentEventKey ? '0' : '', \n                'borderBottomLeftRadius': isCurrentEventKey ? '0' : '' \n            }}\n            block className='text-dark' \n            as={Button}  variant='primary' \n            eventKey={alertKey}\n        >   \n            <h2 className='mb-0 text-uppercase'>{alert.ticker}</h2>\n                <h5 className='mb-1 text-uppercase'>{(alert.stance ? 'BULLISH' : 'BEARISH')}</h5>\n                <h6 className='mb-0 text-uppercase'>ENTRY TARGET: {alert.entry}</h6>\n                <h6 xs={12} className='mb-0 text-uppercase'>EXIT TARGET: {alert.exit}</h6>\n                <small>LAST UPDATE: {formatTime(alert.time)} </small>\n        </Accordion.Toggle>\n    );\n}\n\nexport default AlertCardToggle","import { Link } from 'react-router-dom';\n\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Accordion from \"react-bootstrap/Accordion\";\n\nimport AlertCardToggle from './alert-card-toggle.component'\n\nconst AlertCard = ({showEditModal, alertType, admin, alert, alertKey}) => {\n\n    const formatDate = (time) => {\n        let [year, month, date] = time.split(\"-\")\n        let newDate = date.substring(0, 2)\n        let newYear = year.substring(2, 4)\n        return month+'/'+newDate+'/'+newYear\n    }\n\n    return (\n        <Card key={alertKey} bg='primary' text='dark' \n                className='shadow border-0 mt-4 mb-4'>\n            <AlertCardToggle alertKey={alertKey} alert={alert}/>\n            <Accordion.Collapse eventKey={alertKey}>\n                <Card.Body className='p-0 text-center text-dark border-secondary border-top'>\n                    <p style={{display: alert.synopsis === '' ? 'none' : 'block'}} \n                    className='mt-3 pl-3 pr-3'>\n                        {alert.synopsis}\n                    </p>\n                    <Card.Footer className='border-0'>\n                        <small className=\"text-dark text-muted mt-3\">\n                            Posted by {alert.author} on {formatDate(alert.time)}\n                        </small><br/>\n                        {admin &&\n                            <Link to={'/' + alertType + 'Alerts/' + alert._id}>\n                                <Button className='shadow text-dark mt-2 mb-2 ml-3' \n                                variant='secondary' onClick={showEditModal}>\n                                    Edit Alert\n                                </Button>\n                            </Link>\n                        }\n                    </Card.Footer>\n                </Card.Body>\n            </Accordion.Collapse>\n        </Card>\n    )\n}\n\nexport default AlertCard","import {useEffect, useState} from 'react';\n\nimport axios from 'axios';\n\n//react bootstrap imports\nimport Accordion from \"react-bootstrap/Accordion\";\nimport CardColumns from 'react-bootstrap/CardColumns'\nimport Container from 'react-bootstrap/Container'\n\nimport NewAlertCard from './new-alert-card.component'\nimport CreateAlertModal from './create-alert-modal.component'\nimport EditAlertModal from './edit-alert-modal.component';\nimport AlertCard from './alert-card.component';\n\nconst AlertsList = ({admin, alertType, userName}) => {\n    const [alerts, setAlerts] = useState([])\n    const [createModal, setCreateModal] = useState(false)\n    const [editModal, setEditModal] = useState(false)\n    let alertKey = 0\n\n    useEffect(() => {\n        axios.get('https://alertigo-api.herokuapp.com/' + alertType + 'Alerts')\n            .then(response => {\n                const newAlerts = response.data.reverse()\n                if(alerts.length === newAlerts.length) {\n                    return\n                }\n                else setAlerts(response.data.reverse())\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }, [alertType, alerts])\n\n    return (\n        <Container className='pt-4 pb-4'>\n            <CreateAlertModal showCreateModal={createModal} \n                            closeCreateModal={() => setCreateModal(false)}\n                            userName={userName}\n                            alertType={alertType}\n            />\n            <EditAlertModal showEditModal={editModal}\n                            closeEditModal={() => setEditModal(false)}\n                            userName={userName}\n                            alertType={alertType}\n            />\n            {admin &&\n                <NewAlertCard showCreateModal={() => setCreateModal(true)}/>\n            }       \n            <Accordion>\n                <CardColumns>\n                    {alerts.map(currentAlert => {\n                        alertKey++\n                        return (\n                            <AlertCard \n                                showEditModal={() => setEditModal(true)} \n                                alertType={alertType} \n                                alert={currentAlert}\n                                alertKey={alertKey}\n                                key={alertKey}\n                                admin={admin}\n                            />\n                        )\n                    })}\n                </CardColumns>\n            </Accordion>\n        </Container>  \n    )\n}\n\nexport default AlertsList","import {Component} from 'react';\n\n//react bootstrap imports\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Card from 'react-bootstrap/Card'\nimport CardDeck from 'react-bootstrap/CardDeck'\n\nexport default class TeamBio extends Component {\n    render() {\n        return (\n            <Container className='mt-2 pt-2'>\n                <Row xs='auto' className='justify-content-center mt-5'>\n                    <Jumbotron fluid className='bg-primary shadow-lg rounded mb-0 p-4'>\n                    <h1 className='text-center font-weight-light text-dark mb-0'>\n                    WHO IS ALERTIGO?\n                    </h1>\n                    </Jumbotron>\n                </Row>\n                <CardDeck className='mt-5 mb-5 text-dark'>\n                    <Card bg='primary' className='shadow-lg'>\n                        <Card.Header><h2 className='font-weight-light mb-0 text-center'>LEAPS TRADER</h2></Card.Header>\n                        <Card.Body>\n                        <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a lectus turpis. Sed ipsum lorem, commodo vel egestas et, aliquam at metus. Nam ut bibendum odio, nec efficitur sapien. Aenean finibus pulvinar massa at volutpat. Integer tempus lacus at sapien congue lobortis. Nullam feugiat, sapien ac molestie convallis, nisi est cursus mi, ac imperdiet felis leo at velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam sodales quis massa eu aliquet. Morbi at nulla quis lacus congue dictum. Duis in tincidunt neque, id porta tortor. Proin et dignissim turpis, eget fringilla orci. Aenean mauris elit, rutrum non tortor eget, rutrum condimentum magna.</Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <div className='w-100 d-md-none mt-2 mb-2'></div>\n                    <Card bg='primary' className='shadow-lg'>\n                        <Card.Header><h2 className='font-weight-light mb-0 text-center'>CHRIS GARCIA</h2></Card.Header>\n                        <Card.Body>\n                        <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pellentesque, dui ac convallis consequat, ipsum lacus varius nisl, at tincidunt lorem velit vel elit. Vivamus neque dolor, dapibus ac iaculis vel, dapibus et risus. Etiam maximus dolor quis dignissim tristique. Fusce felis enim, dapibus at orci eget, gravida hendrerit dolor. Nam sit amet sagittis augue, at scelerisque sem. Cras rhoncus leo in eros viverra mollis in quis est. Donec id dapibus turpis, ut bibendum quam. Nunc finibus risus a tortor ornare vestibulum. Sed auctor tellus eget elementum pulvinar. Duis aliquet ante vel pulvinar pellentesque. Etiam venenatis tellus maximus consectetur dignissim.</Card.Text>\n                        </Card.Body>\n                    </Card>\n                </CardDeck>\n            </Container>\n        )\n    }\n}","import {Component} from 'react';\n\n//react bootstrap imports\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Card from 'react-bootstrap/Card'\nimport CardDeck from 'react-bootstrap/CardDeck'\n\nexport default class TradingInfo extends Component {\n    render() {\n        return (\n            <Container className='mt-2 pb-3'>\n                <Row xs='auto' className='justify-content-center mt-5'>\n                    <Jumbotron fluid className='bg-primary shadow-lg rounded mb-0 p-4'>\n                        <h1 className='text-center font-weight-light text-dark mb-0'>\n                            WHAT IS TRADING?\n                        </h1>\n                    </Jumbotron>\n                </Row>\n                <CardDeck className='mt-5 mb-5 text-dark'>\n                    <Card bg='primary' className='shadow-lg'>\n                        <Card.Header><h2 className='font-weight-light mb-0 text-center'>WHAT IS CRYPTO?</h2></Card.Header>\n                        <Card.Body>\n                        <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a lectus turpis. Sed ipsum lorem, commodo vel egestas et, aliquam at metus. Nam ut bibendum odio, nec efficitur sapien. Aenean finibus pulvinar massa at volutpat. Integer tempus lacus at sapien congue lobortis. Nullam feugiat, sapien ac molestie convallis, nisi est cursus mi, ac imperdiet felis leo at velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam sodales quis massa eu aliquet. Morbi at nulla quis lacus congue dictum. Duis in tincidunt neque, id porta tortor. Proin et dignissim turpis, eget fringilla orci. Aenean mauris elit, rutrum non tortor eget, rutrum condimentum magna.</Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <div className='w-100 d-lg-none mt-2 mb-2'></div>\n                    <Card bg='primary' className='shadow-lg'>\n                        <Card.Header><h2 className='font-weight-light mb-0 text-center'>WHAT ARE STOCKS?</h2></Card.Header>\n                        <Card.Body>\n                        <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pellentesque, dui ac convallis consequat, ipsum lacus varius nisl, at tincidunt lorem velit vel elit. Vivamus neque dolor, dapibus ac iaculis vel, dapibus et risus. Etiam maximus dolor quis dignissim tristique. Fusce felis enim, dapibus at orci eget, gravida hendrerit dolor. Nam sit amet sagittis augue, at scelerisque sem. Cras rhoncus leo in eros viverra mollis in quis est. Donec id dapibus turpis, ut bibendum quam. Nunc finibus risus a tortor ornare vestibulum. Sed auctor tellus eget elementum pulvinar. Duis aliquet ante vel pulvinar pellentesque. Etiam venenatis tellus maximus consectetur dignissim.</Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <div className='w-100 d-lg-none mt-2 mb-2'></div>\n                    <Card bg='primary' className='shadow-lg'>\n                        <Card.Header><h2 className='font-weight-light mb-0 text-center'>WHAT IS FOREX?</h2></Card.Header>\n                        <Card.Body>\n                        <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent justo felis, euismod quis nulla ut, varius rhoncus elit. Praesent augue tortor, ornare eget dapibus sit amet, sagittis a ligula. Integer facilisis, quam vel tempus tempor, nibh nisl euismod sapien, eget placerat magna eros in orci. Vestibulum velit erat, dictum sed cursus imperdiet, rutrum ac risus. Mauris purus lorem, vehicula at libero eu, vulputate faucibus dolor. Pellentesque quis lacus pretium, consequat arcu id, aliquet nisl. Praesent quis pharetra elit, eget bibendum odio. Morbi non ligula non turpis congue blandit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras eleifend quam justo, ac posuere tellus dictum a.</Card.Text>\n                        </Card.Body>\n                    </Card>\n                </CardDeck>\n            </Container>\n        )\n    }\n}","import {useState} from 'react';\n\nimport axios from 'axios';\n\n//react bootstrap imports\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Form from \"react-bootstrap/Form\";\n\n\nconst CreateAccount = () => {\n    const [valid, setValid] = useState(false)\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [crypto, setCrypto] = useState(false)\n    const [shares, setShares] = useState(false)\n    const [options, setOptions] = useState(false)\n    const [forex, setForex] = useState(false)\n    const [admin, setAdmin] = useState(false)\n    const [member, setMember] = useState(false)\n\n    const setAllAlerts = (enabled) => {\n        setCrypto(enabled)\n        setShares(enabled)\n        setOptions(enabled)\n        setForex(enabled)\n    }\n\n    const onSubmit = (e) => {\n        const form = e.currentTarget\n\n        setValid(true)\n\n        if (form.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        } else {\n            const newAccount = {\n                name: name,\n                email: email,\n                crypto: crypto,\n                shares: shares,\n                options: options,\n                forex: forex,\n                admin: admin\n            }\n            axios.post('https://alertigo-api.herokuapp.com/accounts/add', newAccount)\n                .then(res => {\n                    setName('')\n                    setEmail('')\n                    setCrypto(false)\n                    setShares(false)\n                    setOptions(false)\n                    setForex(false)\n                    setAdmin(false)\n                    setMember(false)\n                })\n            e.preventDefault()\n        }\n    }\n\n    return (\n        <Container className='text-center text-dark pt-5 pb-5'>\n            <h1 className='mb-5'>CREATE AN ACCOUNT</h1>\n            <Form noValidate validated={valid} onSubmit={onSubmit}>\n                <Row className='justify-content-center'>\n                    <Form.Group as={Col} xs={6} md={4} lg={3}>\n                        <Form.Control\n                            onChange={(e) => setName(e.target.value)}\n                            value={name}\n                            placeholder=\"NAME\"\n                            className='bg-primary border-0 shadow'\n                            required\n                                />\n                    </Form.Group>\n                    <Form.Group as={Col} xs={6} md={4} lg={3}>\n                        <Form.Control \n                            onChange={(e) => setEmail(e.target.value)}\n                            value={email}\n                            placeholder=\"EMAIL\"\n                            className='bg-primary border-0 shadow'\n                            required\n                                />\n                    </Form.Group>\n                </Row>\n                <Row className='bg-primary shadow rounded w-50 ml-auto mr-auto mt-3 pt-3 pl-1 pr-1'>\n                    <Form.Group as={Col} xs={6} lg={3}>\n                        <Form.Check \n                            disabled={admin || member}\n                            checked={crypto || admin || member}\n                            label='Crypto'\n                            onChange={() => setCrypto(!crypto)}\n                        />\n                    </Form.Group>\n                    <Form.Group as={Col} xs={6} lg={3}>\n                        <Form.Check \n                            disabled={admin || member}\n                            checked={shares || admin || member}\n                            label='Shares'\n                            onChange={() => setShares(!shares)}\n                        />\n                    </Form.Group>\n                    <Form.Group as={Col} xs={6} lg={3}>\n                        <Form.Check \n                            disabled={admin || member}\n                            checked={options || admin || member}\n                            label='Options'\n                            onChange={() => setOptions(!options)}\n                        />\n                    </Form.Group>\n                    <Form.Group as={Col} xs={6} lg={3}>\n                        <Form.Check \n                            disabled={admin || member}\n                            checked={forex || admin || member}\n                            label='Forex'\n                            onChange={() => setForex(!forex)}\n                        />\n                    </Form.Group>\n                </Row>\n                <Row className='bg-primary shadow rounded w-50 ml-auto mr-auto mt-3 pt-3 pl-1 pr-1'>\n                    <Form.Group as={Col} xs={6}>\n                        <Form.Check \n                            disabled={member}\n                            checked={admin}\n                            label='Admin'\n                            onChange={() => {setAllAlerts(!admin); setAdmin(!admin)}}\n                        />\n                    </Form.Group>\n                    <Form.Group as={Col} xs={6}>\n                        <Form.Check \n                            disabled={admin}\n                            checked={member || admin}\n                            label='Member'\n                            onChange={() => {setAllAlerts(!member); setMember(!member)}}\n                        />\n                    </Form.Group>\n                </Row>\n                <Row className='justify-content-center'>\n                    <Form.Group className='mb-0 mt-3'>\n                        <Button type='submit' className='text-dark shadow' variant=\"primary\" >Submit</Button>\n                    </Form.Group>\n                </Row>\n            </Form>\n        </Container>\n    )\n}\n\nexport default CreateAccount","import Navbar from 'react-bootstrap/Navbar'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Nav from 'react-bootstrap/Nav'\nimport { NavDropdown } from \"react-bootstrap\";\n\nconst TopNavbar = ({Link, children}) => {\n    return (\n      <Navbar bg='dark' expand='xl' sticky='top' className='shadow-lg text-left justify-content-left pl-5 pr-5'>\n        <Navbar.Brand className='ml-xl-auto'>\n          <Jumbotron className='text-primary bg-transparent p-2 mb-0'>\n            <h1 className='mb-0'>ALERTIGO</h1>\n          </Jumbotron>\n        </Navbar.Brand>\n        <Navbar.Toggle className='bg-primary text-dark' aria-controls=\"main-nav\"/>\n        <Navbar.Collapse id=\"main-nav\">\n          <Nav className='ml-auto'>\n            <Nav.Link className='text-primary ml-3 mt-auto mb-auto' as={Link} to='/'>HOME</Nav.Link>\n            <NavDropdown className='ml-3 mt-auto mb-auto' title='ALERTS'>\n              <NavDropdown.Item className='bg-transparent text-dark' as={Link} to='/cryptoAlerts'>\n                CRYPTO ALERTS\n              </NavDropdown.Item>\n              <NavDropdown.Item className='bg-transparent text-dark' as={Link} to='/sharesAlerts'>\n                SHARES ALERTS\n              </NavDropdown.Item>\n              <NavDropdown.Item className='bg-transparent text-dark' as={Link} to='/optionsAlerts'>\n                OPTIONS ALERTS\n              </NavDropdown.Item>\n              <NavDropdown.Item className='bg-transparent text-dark' as={Link} to='/forexAlerts'>\n                FOREX ALERTS\n              </NavDropdown.Item>\n            </NavDropdown>\n            {children}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n}\nexport default TopNavbar","import {useState, useEffect, useCallback} from 'react'\n\n\nimport axios from 'axios'\n\nimport Row from 'react-bootstrap/Row'\nimport Navbar from 'react-bootstrap/Navbar'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\n\nconst BottomNavbar = ({count, stripePromise, children}) => {\n    const [isLoading, setLoading] = useState(false)\n    \n    const checkoutClick = useCallback(async (event) => {\n        setLoading(true);\n        const stripe = await stripePromise;\n        const response = await axios.post('https://alertigo-api.herokuapp.com/create-checkout-session');\n        const session = await response.data;\n    \n        const result = await stripe.redirectToCheckout({\n          sessionId: session.id,\n        });\n        if (result.error) {\n          console.log(result.error.message);\n        }\n    }, [setLoading, stripePromise])\n\n    const signUpText = (members) => {\n        let dollars=0;\n        let tier=0;\n        if (members<10) {dollars=50; tier=10}\n        else if (members<25) {dollars=105; tier=25}\n        else if (members<50) {dollars=125; tier=50}\n        else if (members<100) {dollars=200; tier=100}\n        else return 'All slots filled! Grab some popcorn while you watch us win :)'\n      \n        return tier - members + ' slots open for $' + dollars + '/mo pricing';\n    }\n\n    useEffect(() => {\n        if (isLoading) {\n        checkoutClick().then(() => {\n            setLoading(false);\n        });\n        }\n    }, [checkoutClick, isLoading]);\n\n    return (\n        <Navbar  bg='dark' className='shadow-lg pt-5 pb-4 pl-5 pr-5'>\n            <Row className='align-items-center m-auto'>\n                <Col xs={12} md={6}  className='text-center mb-4 pl-4 pr-4'>\n                    <Button size='lg' variant='primary' className='shadow text-dark p-4' \n                        disabled={isLoading || count>=100} \n                        onClick={!isLoading ? checkoutClick : null}\n                    >\n                        <h1 className='font-weight-light'>{count>=100 ? \"CAN'T\" : ''} {isLoading ? 'LOADING...' : 'SUBSCRIBE TO ALERTIGO'}</h1>\n                        <h4>{isLoading ? \"Welcome to financial freedom\" : signUpText(count)}</h4>\n                    </Button>\n                </Col>\n                <Col xs={12} md={6}  className='text-primary pl-4 pr-4'>\n                    <h3 className={(count>0 ? 'w-100' : 'd-none')}>$50/MONTH:</h3>\n                    <ProgressBar className={(count>0 ? 'w-100 mb-4 shadow-lg' : 'd-none')} min={0} max={10} now={count} label={((count/10)*100) > 25 ? ((count>10 ? 10 : count) + '/10') : ''} />\n                    <h3 className={(count-10>0 ? 'w-100' : 'd-none')}>$105/MONTH:</h3>\n                    <ProgressBar className={(count-10>0 ? 'w-100 mb-4 shadow-lg' : 'd-none')} min={10} max={25} now={count} label={(((count-10)/25)*100) > 25 ? ((count>25 ? 15 : count-10) + '/15') : ''}/>\n                    <h3 className={(count-25>0 ? 'w-100' : 'd-none')}>$125/MONTH:</h3>\n                    <ProgressBar className={(count-25>0 ? 'w-100 mb-4 shadow-lg' : 'd-none')} min={25} max={50} now={count} label={(((count-15)/50)*100) > 25 ? ((count>50 ? 25 : count-25) + '/25') : ''}/>\n                    <h3 className={(count-1500>0 ? 'w-100' : 'd-none')}>$200/MONTH:</h3>\n                    <ProgressBar className={(count-1500>0 ? 'w-100 mb-4 shadow-lg' : 'd-none')} min={1500} max={3000} now={count} label={(((count-1500)/1500)*100) > 25 ? ((count-1000>1500 ? 1500 : count-1000) + '/1500') : ''}/>\n                </Col>\n            </Row>\n        </Navbar>\n    )\n}\nexport default BottomNavbar","import Container from 'react-bootstrap/Container'\n\nconst RestrictedContent = ({clearance}) => {\n    return (\n        <Container className='text-center text-dark p-5'>\n            <h1 className='mb-5'>This area is restricted.<br/>To access it you must be an Alertigo {clearance}.</h1>\n            <h3 className='mb-0'>Already an Alertigo {clearance}? Sign in at the top to view this page.</h3>\n        </Container>\n    )\n}\n\nexport default RestrictedContent","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useEffect, useState } from \"react\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport './scss/custom.scss'\n\nimport { loadStripe } from \"@stripe/stripe-js\"\n\nimport axios from 'axios'\n\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Nav from 'react-bootstrap/Nav'\nimport FormControl from 'react-bootstrap/FormControl'\n\nimport AlertsList from './components/alerts/alerts-list.component'\nimport TeamBio from './components/homepage/team-bio.component'\nimport TradingInfo from './components/homepage/trading-info.component'\nimport CreateAccount from \"./components/create-account.component\";\nimport TopNavbar from './components/site/top-nav.component'\nimport BottomNavbar from \"./components/site/bottom-nav.ccomponent\";\nimport RestrictedContent from './components/site/restricted-content.component'\n\nconst App = () => {\n  const [pass, setPass] = useState('')\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [loggedInCrypto, setLoggedInCrypto] = useState(false)\n  const [loggedInShares, setLoggedInShares] = useState(false)\n  const [loggedInOptions, setLoggedInOptions] = useState(false)\n  const [loggedInForex, setLoggedInForex] = useState(false)\n  const [loggedInAdmin, setLoggedInAdmin] = useState(false)\n  const [userName, setUserName] = useState('')\n  const stripePromise = useState(() => loadStripe('pk_test_51IDpHFIRiN8NewytzC0856E85t72Bd2zF2Kn7sWSRgrZS8HlcQmCQNdEbXDqLrFIXuPJIf5arF9ojL7V5l32hpvL00UaiQd0BI'))\n  const [count, setCount] = useState(11)\n\n  useEffect(() => {\n    axios.get('https://alertigo-api.herokuapp.com/accounts')\n    .then(response => {\n      console.log('pulled accounts from api')\n      setCount(response.data.length)\n    }).catch((error) => {\n      console.log(error);\n    })\n  }, [])\n\n  const onLogout = () => {\n    setPass('')\n    setUserName('')\n    setLoggedIn(false)\n    setLoggedInCrypto(false)\n    setLoggedInShares(false)\n    setLoggedInOptions(false)\n    setLoggedInForex(false)\n    setLoggedInAdmin(false)\n  }\n\n  const onLogin = () => {\n    let accounts, matchingAccounts = [];\n    let lowerPass = pass.toLowerCase()\n    axios.get('https://alertigo-api.herokuapp.com/accounts')\n      .then(response => {\n          accounts = response.data\n          matchingAccounts = accounts.filter(account => \n            account.name.toLowerCase() === lowerPass \n            || account.email.toLowerCase === lowerPass\n          \n          )\n          if(matchingAccounts.length === 1) {\n            setLoggedIn(true)\n            const account = matchingAccounts[0]\n            setUserName(account.name)\n            if(account.admin) setLoggedInAdmin(true)\n            if(account.crypto) setLoggedInCrypto(true)\n            if(account.shares) setLoggedInShares(true)\n            if(account.options) setLoggedInOptions(true)\n            if(account.forex) setLoggedInForex(true)\n            return\n          }\n          return\n      })\n      .catch((error) => {\n          console.log(error);\n      })\n  }\n\n  return (\n    <Router>\n      <p className='mb-0 text-center text-dark pt-3 pb-3'>\n        LEARN HOW TO TRADE 1% BETTER THAN THE COMPETITION \n        <br className='d-block d-md-none'/> \n        <span className='text-primary'>&nbsp;{count}&nbsp;</span>\n        MEMBERS & COUNTING\n      </p>\n      <TopNavbar Link={Link}>\n        {loggedInAdmin \n          ? <Nav.Link className='text-primary ml-3 mt-auto mb-auto' as={Link} to='/create'>NEW ACCOUNT</Nav.Link>\n          : ''\n        }\n        <Form className='m-3' inline onSubmit={loggedIn ? onLogout : onLogin}>\n          <Form.Row>\n            <Col xs={12} sm='auto'>\n              {loggedIn \n              ? <Nav.Item \n                  className='text-dark bg-primary rounded text-uppercase pt-2 pb-2 pl-3 pr-3'>\n                  CURRENTLY LOGGED IN AS: {userName}\n                </Nav.Item> \n              : <FormControl \n                  placeholder=\"Password\" \n                  className=\"bg-primary border-0 text-dark\" \n                  value={pass} \n                  onChange={(e) => setPass(e.target.value)} \n                />\n              }\n            </Col>\n            <Col>\n              <Button className='mt-3 mt-sm-0' type='submit' variant=\"outline-primary\">\n                SIGN {loggedIn ? 'OUT' : 'IN'}\n              </Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      </TopNavbar>\n      <Route path=\"/\" exact>\n        <TeamBio/>\n        <TradingInfo/>\n      </Route>\n      <Route path=\"/cryptoAlerts\">\n        {loggedInCrypto ? \n          <AlertsList alertType='crypto' admin={loggedInAdmin} userName={userName}/>\n          : <RestrictedContent clearance='Crypto Member'/>}\n      </Route>\n      <Route path=\"/sharesAlerts\">\n        {loggedInShares ? \n          <AlertsList alertType='shares' admin={loggedInAdmin} userName={userName}/>\n          : <RestrictedContent clearance='Shares Member'/>}\n      </Route>\n      <Route path=\"/optionsAlerts\">\n        {loggedInOptions ? \n          <AlertsList alertType='options' admin={loggedInAdmin} userName={userName}/>\n          : <RestrictedContent clearance='Options Member'/>}\n      </Route>\n      <Route path=\"/forexAlerts\">\n        {loggedInForex ? \n          <AlertsList alertType='forex' admin={loggedInAdmin} userName={userName}/>\n          : <RestrictedContent clearance='Forex Member'/>}\n      </Route>\n      <Route path=\"/create\">\n        {loggedInAdmin ?\n          <CreateAccount/>\n          : <RestrictedContent clearance='Admin'/>}\n      </Route>\n      <BottomNavbar count={count} stripePromise={stripePromise}></BottomNavbar>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}