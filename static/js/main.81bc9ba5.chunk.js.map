{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["stripePromise","loadStripe","percent","members","tierAmt","tierPrev","progressText","dollars","signUpText","tier","prevTier","App","checkoutClick","event","a","stripe","fetch","method","response","json","session","redirectToCheckout","sessionId","id","result","error","console","log","message","useState","count","setValue","Container","fluid","className","Navbar","bg","expand","sticky","Brand","Jumbotron","Toggle","aria-controls","Collapse","Nav","Link","href","Text","style","width","background","border","type","name","value","onChange","e","target","Row","xs","Button","size","variant","onClick","Col","lg","ProgressBar","now","label","CardDeck","Card","Header","Body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81bc9ba5.chunk.js","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\"\nimport './App.css';\nimport './scss/custom.scss'\n// import TradingViewWidget from 'react-tradingview-widget';\n// <TradingViewWidget symbol=\"TSLA\" interval='30' hide_top_toolbar='true' width={'100%'} height={'20em'}/>\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Card from 'react-bootstrap/Card'\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport Button from 'react-bootstrap/Button'\nimport { Nav } from \"react-bootstrap\";\n\nconst stripePromise = loadStripe('pk_test_51IDpHFIRiN8NewytzC0856E85t72Bd2zF2Kn7sWSRgrZS8HlcQmCQNdEbXDqLrFIXuPJIf5arF9ojL7V5l32hpvL00UaiQd0BI')\nlet memberCount = 777;\n\nfunction percent(members, tierAmt, tierPrev) {\n  if (members<tierPrev) return 0;\n  else if (members>tierAmt) return 100;\n  else return (members-tierPrev)/(tierAmt-tierPrev)*100;\n}\n\nfunction progressText(members, tierAmt, tierPrev) {\n  let dollars=0;\n  if (tierAmt<=100) dollars=50;\n  else if (tierAmt<=500) dollars=100;\n  else if (tierAmt<=1500) dollars=150;\n  else dollars=200;\n\n  if (percent(members, tierAmt, tierPrev) === 100) return (tierAmt-tierPrev) + ' / ' + (tierAmt-tierPrev) + ' slots filled for $' + dollars + '/mo pricing';\n  else return (members-tierPrev) + ' / ' + (tierAmt-tierPrev);\n}\n\nfunction signUpText(members) {\n  let dollars=0;\n  let tier=0;\n  let prevTier=0;\n  if (members<100) {dollars=50; tier=100; prevTier=0;}\n  else if (members<500) {dollars=100; tier=400; prevTier=100;}\n  else if (members<1500) {dollars=150; tier=1000; prevTier=500;}\n  else if (members<3000) {dollars=200; tier=1500; prevTier=1500}\n  else return 'All slots filled! Grab some popcorn while you watch us win :)'\n\n  return tier + prevTier - members + ' slots open for $' + dollars + '/mo pricing';\n}\n\nfunction App() {\n  const checkoutClick = async (event) => {\n    // Get Stripe.js instance\n    const stripe = await stripePromise;\n\n    // Call your backend to create the Checkout Session\n    const response = await fetch('https://alertigo-api.herokuapp.com/create-checkout-session', { method: 'POST' });\n    // console.log(response);\n    const session = await response.json();\n\n    // When the customer clicks on the button, redirect them to Checkout.\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id,\n    });\n\n    if (result.error) {\n      // If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `result.error.message`.\n      console.log(result.error.message);\n    }\n  }\n\n  const [count, setValue] = useState(memberCount);\n\n  return (\n    <Container fluid className='p-0'>\n      {/* NAVBAR */}\n      <Navbar bg='secondary' expand='lg' sticky='top' className='shadow-lg text-center text-lg-left justify-content-center justify-content-lg-left'>\n        <Navbar.Brand>\n          <Jumbotron className='bg-secondary p-0 mb-0'>\n            <h1 className='text-dark mb-0'>ALERTIGO</h1>\n            <p className='d-none d-md-block text-dark mb-0'>Trading education, 1% better than the competition.</p>\n          </Jumbotron>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"main-nav\" />\n        <Navbar.Collapse id=\"main-nav\">\n          <Nav className='text-dark ml-auto'>\n            <Nav.Link href='http://twitter.com/alertigo'>TWITTER</Nav.Link>\n            <Nav.Link href='http://facebook.com/alertigo'>FACEBOOK</Nav.Link>\n            <Nav.Link href='http://instagram.com/alertigo'>INSTAGRAM</Nav.Link>\n          </Nav>\n          <Navbar.Text className='text-dark'>\n            <input className='text-dark ml-3' style={{width: '2.5em', background: 'none', border: 'none'}} type='text' name='title' value={count} onChange={(e) => setValue(e.target.value)} />\n            <span>MEMBERS & COUNTING</span>\n          </Navbar.Text>\n        </Navbar.Collapse>\n      </Navbar>\n      {/* COUNTER */}\n      {/* <Container>\n        <Row className='align-items-center justify-content-center mt-5'>\n          <Col xs={12} lg={5} className='text-center text-lg-right h3 text-secondary'>Join Alertigo's community of </Col>\n          <Col xs={'auto'} className='m-auto m-lg-0'>\n            <Row className='h1 shadow-lg bg-primary rounded-circle mb-0' style={{width: '3em', height: '3em'}}>\n              <input className='text-center text-dark' style={{width: '3em', background: 'none', border: 'none'}} type='text' name='title' value={count} onChange={(e) => setValue(e.target.value)} />\n            </Row>\n          </Col>\n          <Col xs={12} lg={5} className='text-center text-lg-left h3 text-secondary'>passionate members!</Col>\n        </Row>\n      </Container> */}\n      {/* SIGN UP SECTION */}\n      <Container>\n        <Row xs={'auto'} className='justify-content-center mt-5 mb-4'>\n          <Button size='lg' variant='primary' className='shadow text-dark p-4' onClick={checkoutClick}>\n            <h1 className='font-weight-light'>SUBSCRIBE TO ALERTIGO</h1>\n            <h4>{signUpText(count)}</h4>\n          </Button>\n        </Row>\n        <Row>\n          <Col xs={12} lg={6}>\n            <ProgressBar className='shadow-lg' now={percent(count, 100, 0)} label={progressText(count, 100, 0)}/>\n          </Col>\n          <Col xs={12} lg={6}>\n            <ProgressBar className='shadow-lg' now={percent(count, 500, 100)} label={progressText(count, 500, 100)}/>\n          </Col>\n          <Col xs={12} lg={6}>\n            <ProgressBar className='shadow-lg' now={percent(count, 1500, 500)} label={progressText(count, 1500, 500)}/>\n          </Col>\n          <Col xs={12} lg={6}>\n            <ProgressBar className='shadow-lg' now={percent(count, 3000, 1500)} label={progressText(count, 3000, 1500)}/>\n          </Col>\n        </Row>\n      </Container>\n      {/* WHO TF ARE YOU */}\n      <Container>\n        <Row xs='auto' className='justify-content-center mt-5'>\n          <Jumbotron fluid className='bg-secondary shadow-lg rounded mb-0 p-4'>\n            <h1 className='text-center font-weight-light text-dark mb-0'>\n              WHO TF ARE YOU?\n            </h1>\n          </Jumbotron>\n        </Row>\n        <CardDeck className='mt-5 mb-5'>\n          <Card bg='secondary' className='shadow-lg'>\n            <Card.Header><h2 className='font-weight-light mb-0 text-center'>LEAPS TRADER</h2></Card.Header>\n            <Card.Body>\n              <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a lectus turpis. Sed ipsum lorem, commodo vel egestas et, aliquam at metus. Nam ut bibendum odio, nec efficitur sapien. Aenean finibus pulvinar massa at volutpat. Integer tempus lacus at sapien congue lobortis. Nullam feugiat, sapien ac molestie convallis, nisi est cursus mi, ac imperdiet felis leo at velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam sodales quis massa eu aliquet. Morbi at nulla quis lacus congue dictum. Duis in tincidunt neque, id porta tortor. Proin et dignissim turpis, eget fringilla orci. Aenean mauris elit, rutrum non tortor eget, rutrum condimentum magna.</Card.Text>\n            </Card.Body>\n          </Card>\n          <Card bg='secondary' className='shadow-lg'>\n            <Card.Header><h2 className='font-weight-light mb-0 text-center'>CHRIS GARCIA</h2></Card.Header>\n            <Card.Body>\n              <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pellentesque, dui ac convallis consequat, ipsum lacus varius nisl, at tincidunt lorem velit vel elit. Vivamus neque dolor, dapibus ac iaculis vel, dapibus et risus. Etiam maximus dolor quis dignissim tristique. Fusce felis enim, dapibus at orci eget, gravida hendrerit dolor. Nam sit amet sagittis augue, at scelerisque sem. Cras rhoncus leo in eros viverra mollis in quis est. Donec id dapibus turpis, ut bibendum quam. Nunc finibus risus a tortor ornare vestibulum. Sed auctor tellus eget elementum pulvinar. Duis aliquet ante vel pulvinar pellentesque. Etiam venenatis tellus maximus consectetur dignissim.</Card.Text>\n            </Card.Body>\n          </Card>\n        </CardDeck>\n      </Container>\n      {/* WHAT IS TRADING */}\n      <Container>\n        <Row xs='auto' className='justify-content-center mt-5'>\n          <Jumbotron fluid className='bg-secondary shadow-lg rounded mb-0 p-4'>\n            <h1 className='text-center font-weight-light text-dark mb-0'>\n              WHAT IS TRADING?\n            </h1>\n          </Jumbotron>\n        </Row>\n        <CardDeck className='mt-5 mb-5'>\n          <Card bg='secondary' className='shadow-lg'>\n            <Card.Header><h2 className='font-weight-light mb-0 text-center'>WHAT IS CRYPTO?</h2></Card.Header>\n            <Card.Body>\n              <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam a lectus turpis. Sed ipsum lorem, commodo vel egestas et, aliquam at metus. Nam ut bibendum odio, nec efficitur sapien. Aenean finibus pulvinar massa at volutpat. Integer tempus lacus at sapien congue lobortis. Nullam feugiat, sapien ac molestie convallis, nisi est cursus mi, ac imperdiet felis leo at velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam sodales quis massa eu aliquet. Morbi at nulla quis lacus congue dictum. Duis in tincidunt neque, id porta tortor. Proin et dignissim turpis, eget fringilla orci. Aenean mauris elit, rutrum non tortor eget, rutrum condimentum magna.</Card.Text>\n            </Card.Body>\n          </Card>\n          <Card bg='secondary' className='shadow-lg'>\n            <Card.Header><h2 className='font-weight-light mb-0 text-center'>WHAT ARE STOCKS?</h2></Card.Header>\n            <Card.Body>\n              <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pellentesque, dui ac convallis consequat, ipsum lacus varius nisl, at tincidunt lorem velit vel elit. Vivamus neque dolor, dapibus ac iaculis vel, dapibus et risus. Etiam maximus dolor quis dignissim tristique. Fusce felis enim, dapibus at orci eget, gravida hendrerit dolor. Nam sit amet sagittis augue, at scelerisque sem. Cras rhoncus leo in eros viverra mollis in quis est. Donec id dapibus turpis, ut bibendum quam. Nunc finibus risus a tortor ornare vestibulum. Sed auctor tellus eget elementum pulvinar. Duis aliquet ante vel pulvinar pellentesque. Etiam venenatis tellus maximus consectetur dignissim.</Card.Text>\n            </Card.Body>\n          </Card>\n          <Card bg='secondary' className='shadow-lg'>\n            <Card.Header><h2 className='font-weight-light mb-0 text-center'>WHAT IS FOREX?</h2></Card.Header>\n            <Card.Body>\n              <Card.Text>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent justo felis, euismod quis nulla ut, varius rhoncus elit. Praesent augue tortor, ornare eget dapibus sit amet, sagittis a ligula. Integer facilisis, quam vel tempus tempor, nibh nisl euismod sapien, eget placerat magna eros in orci. Vestibulum velit erat, dictum sed cursus imperdiet, rutrum ac risus. Mauris purus lorem, vehicula at libero eu, vulputate faucibus dolor. Pellentesque quis lacus pretium, consequat arcu id, aliquet nisl. Praesent quis pharetra elit, eget bibendum odio. Morbi non ligula non turpis congue blandit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras eleifend quam justo, ac posuere tellus dictum a.</Card.Text>\n            </Card.Body>\n          </Card>\n        </CardDeck>\n      </Container>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}